2020-04-04 10:31:29,068 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 10:31:29,092 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 10:31:29,094 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 10:31:29,340 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 10:31:29,566 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 10:31:29,593 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4d66cb, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7c79f2cf, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@63551c66, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2761156e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4cf15477, org.springframework.test.context.event.EventPublishingTestExecutionListener@7fad28ac, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3450bd13, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1bb51492, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5da1a97f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4b5f022f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7a569672]
2020-04-04 10:31:31,762 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 10:31:33,950 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 10:31:33,950 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 10:31:33,963 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 10:31:35,376 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 10:31:35,672 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 10:31:35,984 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 10:31:36,616 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:31:36,616 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:31:36,645 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@42b71591
2020-04-04 10:31:38,010 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 10:31:38,314 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 10:31:38,578 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:31:38,578 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:31:39,015 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 10:31:40,268 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 10:31:40,376 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8814b43979205e1adeb31b', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:190}] to localhost:27017
2020-04-04 10:31:40,384 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8814b43979205e1adeb31b', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5363400}
2020-04-04 10:31:40,962 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 10:31:41,125 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 10:31:41,158 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 10:31:41,219 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 10:31:41,458 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 10:31:41,464 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 10:31:41,564 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 11.548 seconds (JVM running for 14.01)
2020-04-04 10:31:42,543 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:31:42,543 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:31:42,605 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:31:42,605 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:31:44,469 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 10:31:44,472 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 10:31:44,478 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 10:33:15,261 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 10:33:15,274 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 10:33:15,276 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 10:33:15,539 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 10:33:15,766 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 10:33:15,788 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@25c16cf7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@53dbe7b2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@520ec7a7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@53551fef, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7d5d77a6, org.springframework.test.context.event.EventPublishingTestExecutionListener@71b7e9c8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@55202ba6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2ef1fc8a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@38874eb5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@76b019c4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@221961af]
2020-04-04 10:33:17,959 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 10:33:20,122 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 10:33:20,123 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 10:33:20,144 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 10:33:21,429 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 10:33:21,660 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 10:33:21,895 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 10:33:22,481 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:33:22,482 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:33:22,501 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@13c0f4c4
2020-04-04 10:33:23,791 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 10:33:24,019 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 10:33:24,200 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:33:24,200 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:33:24,557 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 10:33:25,369 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 10:33:25,434 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e88151d8153b02fff5c574a', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:191}] to localhost:27017
2020-04-04 10:33:25,440 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e88151d8153b02fff5c574a', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3358200}
2020-04-04 10:33:25,858 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 10:33:25,981 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 10:33:26,002 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 10:33:26,044 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 10:33:26,203 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 10:33:26,208 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 10:33:26,287 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 10.062 seconds (JVM running for 12.499)
2020-04-04 10:33:28,712 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 10:33:28,716 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 10:33:28,723 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 10:34:20,626 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 10:34:20,639 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 10:34:20,640 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 10:34:20,892 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 10:34:21,116 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 10:34:21,137 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@32ddcca, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1ddc8fc, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77d58f3a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1e288c76, org.springframework.test.context.support.DirtiesContextTestExecutionListener@738ed8f5, org.springframework.test.context.event.EventPublishingTestExecutionListener@1cfb7450, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@478c84aa, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1d1deb11, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@18d1d137, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5f4f6f89, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7c45191e]
2020-04-04 10:34:23,328 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 10:34:25,508 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 10:34:25,510 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 10:34:25,526 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 10:34:26,754 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 10:34:26,989 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 10:34:27,253 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 10:34:27,863 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:34:27,863 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:34:27,883 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@f2b035b
2020-04-04 10:34:29,225 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 10:34:29,455 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 10:34:29,672 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:34:29,672 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:34:30,077 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 10:34:31,175 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 10:34:31,270 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e88155fdd52f54e653d4205', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:192}] to localhost:27017
2020-04-04 10:34:31,281 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e88155fdd52f54e653d4205', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=6845900}
2020-04-04 10:34:31,856 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 10:34:32,006 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 10:34:32,033 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 10:34:32,096 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 10:34:32,357 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 10:34:32,361 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 10:34:32,453 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 10.839 seconds (JVM running for 13.367)
2020-04-04 10:34:33,497 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:34:33,498 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:34:33,560 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:34:33,560 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:34:35,228 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 10:34:35,232 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 10:34:35,241 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 10:36:14,176 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 10:36:14,189 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 10:36:14,190 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 10:36:14,434 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 10:36:14,649 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 10:36:14,671 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@738ed8f5, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1cfb7450, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@478c84aa, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1d1deb11, org.springframework.test.context.support.DirtiesContextTestExecutionListener@18d1d137, org.springframework.test.context.event.EventPublishingTestExecutionListener@5f4f6f89, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7c45191e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@ef220e4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@18bc1064, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3cab07dd, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@68f264bf]
2020-04-04 10:36:16,867 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 10:36:19,060 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 10:36:19,060 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 10:36:19,079 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 10:36:20,420 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 10:36:20,667 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 10:36:20,927 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 10:36:21,496 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:36:21,496 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:36:21,513 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7c2a5a0d
2020-04-04 10:36:22,861 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 10:36:23,064 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 10:36:23,279 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:36:23,279 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:36:23,614 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 10:36:24,446 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 10:36:24,514 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8815d09a063c4e9b7000f6', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:193}] to localhost:27017
2020-04-04 10:36:24,523 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8815d09a063c4e9b7000f6', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4843000}
2020-04-04 10:36:24,920 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 10:36:25,043 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 10:36:25,065 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 10:36:25,115 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 10:36:25,303 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 10:36:25,306 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 10:36:25,387 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 10.286 seconds (JVM running for 12.702)
2020-04-04 10:36:26,355 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:36:26,355 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:36:26,427 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:36:26,427 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:36:28,146 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 10:36:28,150 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 10:36:28,158 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 10:44:38,578 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 10:44:38,584 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 10:44:38,585 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 10:44:38,695 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 10:44:38,785 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 10:44:38,794 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2f94c4db, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@593e824f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@72ccd81a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6d8792db, org.springframework.test.context.support.DirtiesContextTestExecutionListener@64bc21ac, org.springframework.test.context.event.EventPublishingTestExecutionListener@493dfb8e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5d25e6bb, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@ce5a68e, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@9d157ff, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2f162cc0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5df417a7]
2020-04-04 10:44:40,045 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 10:44:42,136 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 10:44:42,136 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 10:44:42,143 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 10:44:43,010 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 10:44:43,179 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 10:44:43,352 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 10:44:43,902 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:44:43,902 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:44:43,923 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6febec41
2020-04-04 10:44:45,147 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 10:44:45,355 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 10:44:45,528 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:44:45,529 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:44:45,809 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 10:44:46,539 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 10:44:46,592 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8817c6fd8c7341a35f3c12', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:194}] to localhost:27017
2020-04-04 10:44:46,598 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8817c6fd8c7341a35f3c12', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3489700}
2020-04-04 10:44:46,942 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 10:44:47,039 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 10:44:47,053 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 10:44:47,084 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 10:44:47,247 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 10:44:47,250 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 10:44:47,301 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 8.345 seconds (JVM running for 9.533)
2020-04-04 10:44:47,949 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:44:47,949 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:44:48,013 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:44:48,013 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:44:48,034 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 10:44:48,038 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 10:44:48,044 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 10:45:06,136 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 10:45:06,149 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 10:45:06,150 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 10:45:06,423 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 10:45:06,640 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 10:45:06,665 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@32ddcca, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1ddc8fc, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77d58f3a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1e288c76, org.springframework.test.context.support.DirtiesContextTestExecutionListener@738ed8f5, org.springframework.test.context.event.EventPublishingTestExecutionListener@1cfb7450, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@478c84aa, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1d1deb11, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@18d1d137, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5f4f6f89, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7c45191e]
2020-04-04 10:45:08,805 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 10:45:10,994 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 10:45:10,995 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 10:45:11,012 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 10:45:12,341 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 10:45:12,591 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 10:45:12,852 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 10:45:13,482 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:45:13,482 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:45:13,503 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@f2b035b
2020-04-04 10:45:14,747 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 10:45:14,952 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 10:45:15,213 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:45:15,213 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:45:15,692 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 10:45:16,797 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 10:45:16,888 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8817e4d40d15300220a09d', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:195}] to localhost:27017
2020-04-04 10:45:16,896 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8817e4d40d15300220a09d', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4840300}
2020-04-04 10:45:17,437 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 10:45:17,589 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 10:45:17,614 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 10:45:17,671 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 10:45:17,898 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 10:45:17,904 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 10:45:17,999 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 10.896 seconds (JVM running for 13.337)
2020-04-04 10:45:18,939 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:45:18,939 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:45:19,007 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:45:19,007 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:45:19,702 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 10:45:19,706 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 10:45:19,714 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 10:48:57,456 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 10:48:57,473 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 10:48:57,475 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 10:48:57,753 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 10:48:58,015 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 10:48:58,048 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@738ed8f5, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1cfb7450, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@478c84aa, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1d1deb11, org.springframework.test.context.support.DirtiesContextTestExecutionListener@18d1d137, org.springframework.test.context.event.EventPublishingTestExecutionListener@5f4f6f89, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7c45191e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@ef220e4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@18bc1064, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3cab07dd, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@68f264bf]
2020-04-04 10:49:00,549 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 10:49:02,724 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 10:49:02,725 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 10:49:02,741 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 10:49:04,060 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 10:49:04,298 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 10:49:04,567 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 10:49:05,239 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:49:05,239 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:49:05,260 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7c2a5a0d
2020-04-04 10:49:06,771 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 10:49:06,970 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 10:49:07,193 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:49:07,193 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:49:07,555 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 10:49:08,584 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 10:49:08,691 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8818ccfa79d66550745e2e', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:196}] to localhost:27017
2020-04-04 10:49:08,702 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8818ccfa79d66550745e2e', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=6487900}
2020-04-04 10:49:09,368 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 10:49:09,583 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 10:49:09,617 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 10:49:09,708 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 10:49:10,018 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 10:49:10,026 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 10:49:10,153 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 11.614 seconds (JVM running for 14.236)
2020-04-04 10:49:11,378 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:49:11,379 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:49:11,460 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:49:11,460 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:49:13,379 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 10:49:13,383 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 10:49:13,389 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 10:49:52,865 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 10:49:52,880 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 10:49:52,881 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 10:49:53,160 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 10:49:53,393 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 10:49:53,414 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@18d1d137, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5f4f6f89, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c45191e, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@ef220e4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@18bc1064, org.springframework.test.context.event.EventPublishingTestExecutionListener@3cab07dd, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@68f264bf, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@77988c45, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@f5f8de2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6baee63b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1002b06d]
2020-04-04 10:49:55,625 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 10:49:57,787 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 10:49:57,788 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 10:49:57,800 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 10:49:59,212 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 10:49:59,478 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 10:49:59,708 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 10:50:00,332 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:50:00,332 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:50:00,352 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@64d1b804
2020-04-04 10:50:01,672 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 10:50:01,871 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 10:50:02,077 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:50:02,077 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:50:02,472 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 10:50:03,440 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 10:50:03,526 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e881903ef923d6a9edcee8a', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:197}] to localhost:27017
2020-04-04 10:50:03,536 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e881903ef923d6a9edcee8a', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=6585000}
2020-04-04 10:50:04,065 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 10:50:04,212 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 10:50:04,243 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 10:50:04,297 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 10:50:04,534 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 10:50:04,538 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 10:50:04,646 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 10.811 seconds (JVM running for 13.275)
2020-04-04 10:50:05,761 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:50:05,761 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:50:05,834 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:50:05,834 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:50:07,593 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 10:50:07,597 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 10:50:07,604 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 10:52:41,912 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 10:52:41,924 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 10:52:41,925 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 10:52:42,193 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 10:52:42,480 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 10:52:42,622 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@18bc1064, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3cab07dd, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@68f264bf, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@77988c45, org.springframework.test.context.support.DirtiesContextTestExecutionListener@f5f8de2, org.springframework.test.context.event.EventPublishingTestExecutionListener@6baee63b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1002b06d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@234bfc8c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5008559a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4c0bfe9e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@490fbeaa]
2020-04-04 10:52:45,298 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 10:52:47,432 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 10:52:47,433 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 10:52:47,448 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 10:52:48,578 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 10:52:48,810 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 10:52:49,060 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 10:52:49,703 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:52:49,703 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:52:49,729 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4e0dce1
2020-04-04 10:52:51,040 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 10:52:51,265 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 10:52:51,474 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:52:51,474 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:52:51,910 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 10:52:52,894 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 10:52:52,980 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8819ac6f2a5b36b07251fa', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:198}] to localhost:27017
2020-04-04 10:52:52,988 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8819ac6f2a5b36b07251fa', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4465800}
2020-04-04 10:52:53,525 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 10:52:53,693 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 10:52:53,722 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 10:52:53,792 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 10:52:54,037 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 10:52:54,044 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 10:52:54,158 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 10.999 seconds (JVM running for 13.776)
2020-04-04 10:52:55,242 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:52:55,242 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:52:55,309 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:52:55,309 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:52:57,190 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 10:52:57,195 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 10:52:57,203 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 10:56:19,864 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 10:56:19,883 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 10:56:19,885 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 10:56:20,487 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 10:56:20,774 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 10:56:20,800 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@55202ba6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2ef1fc8a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@38874eb5, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@76b019c4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@221961af, org.springframework.test.context.event.EventPublishingTestExecutionListener@32ddcca, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1ddc8fc, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@77d58f3a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1e288c76, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@738ed8f5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1cfb7450]
2020-04-04 10:56:23,054 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 10:56:25,221 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 10:56:25,222 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 10:56:25,242 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 10:56:26,499 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 10:56:26,770 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 10:56:27,048 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 10:56:27,637 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:56:27,638 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:56:27,660 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@64d1b804
2020-04-04 10:56:29,017 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 10:56:29,262 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 10:56:29,472 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:56:29,473 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:56:29,824 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 10:56:30,671 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 10:56:30,760 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e881a86f3a98a2b00f55206', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:199}] to localhost:27017
2020-04-04 10:56:30,767 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e881a86f3a98a2b00f55206', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4160700}
2020-04-04 10:56:31,180 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 10:56:31,317 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 10:56:31,345 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 10:56:31,395 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 10:56:31,581 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 10:56:31,585 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 10:56:31,658 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 10.386 seconds (JVM running for 13.575)
2020-04-04 10:56:34,229 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 10:56:34,233 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 10:56:34,242 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 10:57:00,181 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 10:57:00,196 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 10:57:00,197 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 10:57:00,449 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 10:57:00,736 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 10:57:00,769 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@18bc1064, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3cab07dd, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@68f264bf, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@77988c45, org.springframework.test.context.support.DirtiesContextTestExecutionListener@f5f8de2, org.springframework.test.context.event.EventPublishingTestExecutionListener@6baee63b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1002b06d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@234bfc8c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5008559a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4c0bfe9e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@490fbeaa]
2020-04-04 10:57:02,934 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 10:57:05,105 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 10:57:05,105 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 10:57:05,116 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 10:57:06,390 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 10:57:06,642 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 10:57:06,890 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 10:57:07,471 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:57:07,471 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:57:07,486 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4e0dce1
2020-04-04 10:57:08,839 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 10:57:09,071 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 10:57:09,322 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:57:09,323 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:57:09,788 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 10:57:10,976 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 10:57:11,075 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e881aae154cd55462645041', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:200}] to localhost:27017
2020-04-04 10:57:11,084 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e881aae154cd55462645041', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5198300}
2020-04-04 10:57:11,644 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 10:57:11,811 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 10:57:11,842 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 10:57:11,906 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 10:57:12,160 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 10:57:12,165 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 10:57:12,256 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 11.025 seconds (JVM running for 13.49)
2020-04-04 10:57:13,190 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:57:13,190 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:57:13,256 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 10:57:13,256 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 10:57:15,012 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 10:57:15,015 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 10:57:15,021 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 10:59:48,516 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 10:59:48,531 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 10:59:48,533 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 10:59:48,780 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 10:59:48,997 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 10:59:49,024 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@f5f8de2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6baee63b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1002b06d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@234bfc8c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5008559a, org.springframework.test.context.event.EventPublishingTestExecutionListener@4c0bfe9e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@490fbeaa, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@35dc849b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@276aa33f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@34065642, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@c85486]
2020-04-04 10:59:51,288 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 10:59:53,466 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 10:59:53,467 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 10:59:53,482 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 10:59:54,899 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 10:59:55,156 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 10:59:55,408 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 10:59:56,063 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:59:56,063 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:59:56,088 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@20b30c5f
2020-04-04 10:59:57,437 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 10:59:57,673 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 10:59:57,903 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 10:59:57,903 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 10:59:58,304 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 10:59:59,155 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 10:59:59,228 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e881b57ec750d0a8391f469', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:201}] to localhost:27017
2020-04-04 10:59:59,235 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e881b57ec750d0a8391f469', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4253900}
2020-04-04 10:59:59,613 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 10:59:59,732 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 10:59:59,752 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 10:59:59,794 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 10:59:59,961 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 10:59:59,966 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 11:00:00,062 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 10.588 seconds (JVM running for 13.104)
2020-04-04 11:00:02,145 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 11:00:04,153 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 11:00:04,154 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 11:00:04,156 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 11:00:04,704 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 11:00:04,720 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 11:00:04,950 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 11:00:04,966 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 11:00:04,966 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 11:00:04,966 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 11:00:05,205 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 11:00:05,205 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1041 ms
2020-04-04 11:00:05,920 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 11:00:05,947 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 11:00:05,952 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 11:00:05,994 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 11:00:06,057 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 11:00:06,064 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e881b5eec750d0a8391f46a', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:202}] to localhost:27017
2020-04-04 11:00:06,067 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e881b5eec750d0a8391f46a', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1326300}
2020-04-04 11:00:06,538 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 11:00:06,579 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 11:00:06,636 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 11:00:06,765 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 11:00:06,765 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 11:00:06,963 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 11:00:06,963 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 11:00:07,291 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 11:00:07,653 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 11:00:07,654 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 11:00:07,654 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 11:00:07,654 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 11:00:07,654 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 11:00:07,654 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 11:00:07,654 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 11:00:07,865 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 11:00:07,868 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 11:00:07,871 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 11:00:07,875 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1585978207874 with initial instances count: 2
2020-04-04 11:00:07,876 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 11:00:07,877 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1585978207877, current=UP, previous=STARTING]
2020-04-04 11:00:07,880 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 11:00:07,880 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 11:00:07,881 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 11:00:07,887 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 11:00:07,917 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 11:00:07,960 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 11:00:07,964 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 11:00:08,004 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 11:00:08,045 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 11:00:08,045 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 11:00:08,465 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 7.505 seconds (JVM running for 21.508)
2020-04-04 11:00:08,558 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 11:00:08,558 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 11:00:08,608 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 11:00:08,608 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 11:00:08,621 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 11:00:08,621 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1585978208621, current=DOWN, previous=UP]
2020-04-04 11:00:08,621 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 11:00:08,623 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 11:00:08,628 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 11:00:08,630 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 11:00:09,511 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 11:00:09,511 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 11:00:09,521 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 11:00:12,527 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 11:00:12,543 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 11:00:12,563 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-04 11:01:29,277 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-04-04 11:01:29,875 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Fetching config from server at : http://localhost:8888
2020-04-04 11:01:31,957 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 11:01:31,958 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 11:01:31,960 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-04-04 11:01:33,047 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 11:01:33,223 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=9a674b87-e002-39cc-bf5e-fdb47e7ceb3e
2020-04-04 11:01:33,371 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 11:01:34,187 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8776 (http)
2020-04-04 11:01:34,197 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 11:01:34,198 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-04-04 11:01:34,198 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 11:01:34,333 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-04-04 11:01:34,333 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 2354 ms
2020-04-04 11:01:34,442 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-04-04 11:01:34,442 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 11:01:34,454 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1dfb9d86
2020-04-04 11:01:35,403 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] Unable to start LiveReload server
2020-04-04 11:01:35,816 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 11:01:35,944 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [restartedMain] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 11:01:35,965 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-04-04 11:01:35,965 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 11:01:36,202 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 11:01:36,565 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 11:01:36,654 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e881bb893e4d63b25baa095', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:203}] to localhost:27017
2020-04-04 11:01:36,661 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e881bb893e4d63b25baa095', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5102600}
2020-04-04 11:01:37,130 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 11:01:37,199 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2020-04-04 11:01:37,309 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2020-04-04 11:01:37,387 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2020-04-04 11:01:37,387 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2020-04-04 11:01:37,514 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2020-04-04 11:01:37,515 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2020-04-04 11:01:37,717 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2020-04-04 11:01:38,034 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2020-04-04 11:01:38,035 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2020-04-04 11:01:38,035 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2020-04-04 11:01:38,035 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2020-04-04 11:01:38,035 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2020-04-04 11:01:38,035 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2020-04-04 11:01:38,035 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2020-04-04 11:01:38,252 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2020-04-04 11:01:38,259 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2020-04-04 11:01:38,263 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 11:01:38,268 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1585978298266 with initial instances count: 2
2020-04-04 11:01:38,271 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 11:01:38,273 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1585978298273, current=UP, previous=STARTING]
2020-04-04 11:01:38,276 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 11:01:38,277 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Context refreshed
2020-04-04 11:01:38,299 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Found 1 custom documentation plugin(s)
2020-04-04 11:01:38,318 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 11:01:38,355 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [restartedMain] Scanning for api listing references
2020-04-04 11:01:38,542 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_1
2020-04-04 11:01:38,546 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_2
2020-04-04 11:01:38,618 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 11:01:38,657 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 11:01:38,659 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8776
2020-04-04 11:01:39,163 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] Started RulesEngineApplication in 10.629 seconds (JVM running for 11.264)
2020-04-04 11:03:13,567 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8776-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-04 11:03:13,567 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Initializing Servlet 'dispatcherServlet'
2020-04-04 11:03:13,576 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Completed initialization in 9 ms
2020-04-04 11:05:15,543 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [Thread-1] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 11:05:15,544 WARN com.netflix.discovery.DiscoveryClient [Thread-1] Saw local status change event StatusChangeEvent [timestamp=1585978515544, current=DOWN, previous=UP]
2020-04-04 11:05:15,546 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 11:05:15,557 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [Thread-1] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 11:05:15,557 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 11:05:15,566 INFO com.netflix.discovery.DiscoveryClient [Thread-1] Shutting down DiscoveryClient ...
2020-04-04 11:05:18,574 INFO com.netflix.discovery.DiscoveryClient [Thread-1] Unregistering ...
2020-04-04 11:05:18,584 INFO com.netflix.discovery.DiscoveryClient [Thread-1] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 11:05:18,602 INFO com.netflix.discovery.DiscoveryClient [Thread-1] Completed shut down of DiscoveryClient
2020-04-04 11:05:19,531 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Fetching config from server at : http://localhost:8888
2020-04-04 11:05:21,548 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 11:05:21,549 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 11:05:21,553 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-04-04 11:05:22,078 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=9a674b87-e002-39cc-bf5e-fdb47e7ceb3e
2020-04-04 11:05:22,089 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 11:05:22,166 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8776 (http)
2020-04-04 11:05:22,167 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 11:05:22,167 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-04-04 11:05:22,167 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 11:05:22,198 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-04-04 11:05:22,198 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 637 ms
2020-04-04 11:05:22,659 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] Unable to start LiveReload server
2020-04-04 11:05:22,787 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 11:05:22,808 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [restartedMain] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 11:05:22,816 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-04-04 11:05:22,816 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 11:05:22,854 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 11:05:22,894 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 11:05:22,899 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e881c9a93e4d63b25baa096', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:204}] to localhost:27017
2020-04-04 11:05:22,900 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e881c9a93e4d63b25baa096', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=830500}
2020-04-04 11:05:23,251 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 11:05:23,278 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2020-04-04 11:05:23,279 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2020-04-04 11:05:23,281 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2020-04-04 11:05:23,281 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2020-04-04 11:05:23,281 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2020-04-04 11:05:23,281 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2020-04-04 11:05:23,324 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2020-04-04 11:05:23,325 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2020-04-04 11:05:23,325 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2020-04-04 11:05:23,325 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2020-04-04 11:05:23,326 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2020-04-04 11:05:23,326 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2020-04-04 11:05:23,326 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2020-04-04 11:05:23,326 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2020-04-04 11:05:23,332 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2020-04-04 11:05:23,333 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2020-04-04 11:05:23,334 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 11:05:23,335 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1585978523334 with initial instances count: 3
2020-04-04 11:05:23,336 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 11:05:23,336 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1585978523336, current=UP, previous=STARTING]
2020-04-04 11:05:23,337 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 11:05:23,337 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Context refreshed
2020-04-04 11:05:23,338 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Found 1 custom documentation plugin(s)
2020-04-04 11:05:23,343 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [restartedMain] Scanning for api listing references
2020-04-04 11:05:23,344 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 11:05:23,381 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_1
2020-04-04 11:05:23,383 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_2
2020-04-04 11:05:23,412 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 11:05:23,416 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 11:05:23,417 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8776
2020-04-04 11:05:23,754 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] Started RulesEngineApplication in 4.874 seconds (JVM running for 235.855)
2020-04-04 11:05:23,760 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-04-04 11:05:30,209 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8776-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-04 11:05:30,209 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Initializing Servlet 'dispatcherServlet'
2020-04-04 11:05:30,213 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Completed initialization in 4 ms
2020-04-04 11:10:23,329 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-04-04 11:15:23,333 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-04-04 11:20:23,335 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-04-04 11:25:44,614 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-04-04 11:25:45,163 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Fetching config from server at : http://localhost:8888
2020-04-04 11:25:47,256 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 11:25:47,257 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 11:25:47,266 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-04-04 11:25:48,212 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 11:25:48,371 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=9a674b87-e002-39cc-bf5e-fdb47e7ceb3e
2020-04-04 11:25:48,520 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 11:25:49,284 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8776 (http)
2020-04-04 11:25:49,293 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 11:25:49,294 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-04-04 11:25:49,294 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 11:25:49,403 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-04-04 11:25:49,403 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 2108 ms
2020-04-04 11:25:49,508 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-04-04 11:25:49,508 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 11:25:49,520 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3490f489
2020-04-04 11:25:50,180 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] Unable to start LiveReload server
2020-04-04 11:25:50,553 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 11:25:50,620 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [restartedMain] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 11:25:50,638 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-04-04 11:25:50,638 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 11:25:50,834 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 11:25:51,132 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 11:25:51,186 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e882167fbc17e4016dce36e', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:205}] to localhost:27017
2020-04-04 11:25:51,191 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e882167fbc17e4016dce36e', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3112900}
2020-04-04 11:25:51,510 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 11:25:51,581 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2020-04-04 11:25:51,687 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2020-04-04 11:25:51,761 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2020-04-04 11:25:51,761 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2020-04-04 11:25:51,887 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2020-04-04 11:25:51,887 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2020-04-04 11:25:52,031 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2020-04-04 11:25:52,287 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2020-04-04 11:25:52,287 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2020-04-04 11:25:52,287 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2020-04-04 11:25:52,288 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2020-04-04 11:25:52,288 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2020-04-04 11:25:52,288 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2020-04-04 11:25:52,288 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2020-04-04 11:25:52,424 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2020-04-04 11:25:52,427 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2020-04-04 11:25:52,429 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 11:25:52,433 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1585979752432 with initial instances count: 3
2020-04-04 11:25:52,434 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 11:25:52,434 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1585979752434, current=UP, previous=STARTING]
2020-04-04 11:25:52,436 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 11:25:52,437 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Context refreshed
2020-04-04 11:25:52,451 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Found 1 custom documentation plugin(s)
2020-04-04 11:25:52,467 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 11:25:52,487 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [restartedMain] Scanning for api listing references
2020-04-04 11:25:52,629 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_1
2020-04-04 11:25:52,631 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_2
2020-04-04 11:25:52,675 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 11:25:52,697 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 11:25:52,698 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8776
2020-04-04 11:25:53,072 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] Started RulesEngineApplication in 9.182 seconds (JVM running for 9.868)
2020-04-04 11:40:04,496 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-04-04 12:22:14,835 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-04-04 12:24:06,627 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8776-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-04 12:24:06,628 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Initializing Servlet 'dispatcherServlet'
2020-04-04 12:24:06,637 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Completed initialization in 9 ms
2020-04-04 12:27:14,836 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-04-04 12:31:33,172 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8776-exec-9] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at java.base/java.util.Collections.sort(Collections.java:179)
	at com.sapient.rulesengine.RulesEngine.computationOfScores(RulesEngine.java:91)
	at com.sapient.rulesengine.RulesEngine.IterateOverActivities(RulesEngine.java:49)
	at com.sapient.rulesengine.RulesEngineController.getActivityData(RulesEngineController.java:134)
	at com.sapient.rulesengine.RulesEngineController.topFive(RulesEngineController.java:89)
	at com.sapient.rulesengine.RulesEngineController$$FastClassBySpringCGLIB$$106d8b69.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.sapient.rulesengine.RulesEngineController$$EnhancerBySpringCGLIB$$78fc0efc.topFive(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-04-04 12:32:01,804 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [Thread-1] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 12:32:01,807 WARN com.netflix.discovery.DiscoveryClient [Thread-1] Saw local status change event StatusChangeEvent [timestamp=1585983721806, current=DOWN, previous=UP]
2020-04-04 12:32:01,808 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:32:01,832 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:32:01,834 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [Thread-1] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 12:32:01,871 INFO com.netflix.discovery.DiscoveryClient [Thread-1] Shutting down DiscoveryClient ...
2020-04-04 12:32:04,879 INFO com.netflix.discovery.DiscoveryClient [Thread-1] Unregistering ...
2020-04-04 12:32:04,894 INFO com.netflix.discovery.DiscoveryClient [Thread-1] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 12:32:05,030 INFO com.netflix.discovery.DiscoveryClient [Thread-1] Completed shut down of DiscoveryClient
2020-04-04 12:32:07,695 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Fetching config from server at : http://localhost:8888
2020-04-04 12:32:09,732 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 12:32:09,733 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 12:32:09,737 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-04-04 12:32:10,846 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=9a674b87-e002-39cc-bf5e-fdb47e7ceb3e
2020-04-04 12:32:10,861 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 12:32:10,981 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8776 (http)
2020-04-04 12:32:10,982 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 12:32:10,983 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-04-04 12:32:10,983 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 12:32:11,043 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-04-04 12:32:11,043 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1296 ms
2020-04-04 12:32:12,316 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] Unable to start LiveReload server
2020-04-04 12:32:12,588 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 12:32:12,643 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [restartedMain] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 12:32:12,659 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-04-04 12:32:12,659 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 12:32:12,735 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 12:32:12,826 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 12:32:12,831 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8830f4fbc17e4016dce36f', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:206}] to localhost:27017
2020-04-04 12:32:12,834 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8830f4fbc17e4016dce36f', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1126900}
2020-04-04 12:32:13,501 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 12:32:13,559 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2020-04-04 12:32:13,563 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2020-04-04 12:32:13,566 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2020-04-04 12:32:13,566 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2020-04-04 12:32:13,566 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2020-04-04 12:32:13,566 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2020-04-04 12:32:13,622 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2020-04-04 12:32:13,624 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2020-04-04 12:32:13,624 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2020-04-04 12:32:13,624 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2020-04-04 12:32:13,625 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2020-04-04 12:32:13,625 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2020-04-04 12:32:13,625 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2020-04-04 12:32:13,625 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2020-04-04 12:32:13,634 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2020-04-04 12:32:13,636 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2020-04-04 12:32:13,636 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 12:32:13,638 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1585983733637 with initial instances count: 3
2020-04-04 12:32:13,639 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 12:32:13,640 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1585983733640, current=UP, previous=STARTING]
2020-04-04 12:32:13,641 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:32:13,642 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Context refreshed
2020-04-04 12:32:13,644 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Found 1 custom documentation plugin(s)
2020-04-04 12:32:13,651 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:32:13,653 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [restartedMain] Scanning for api listing references
2020-04-04 12:32:13,750 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_1
2020-04-04 12:32:13,756 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_2
2020-04-04 12:32:13,839 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 12:32:13,847 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 12:32:13,848 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8776
2020-04-04 12:32:14,598 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] Started RulesEngineApplication in 8.779 seconds (JVM running for 3991.432)
2020-04-04 12:32:14,604 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-04-04 12:32:15,457 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8776-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-04 12:32:15,457 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Initializing Servlet 'dispatcherServlet'
2020-04-04 12:32:15,465 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Completed initialization in 8 ms
2020-04-04 12:33:24,598 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [Thread-9] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 12:33:24,599 WARN com.netflix.discovery.DiscoveryClient [Thread-9] Saw local status change event StatusChangeEvent [timestamp=1585983804599, current=DOWN, previous=UP]
2020-04-04 12:33:24,599 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:33:24,609 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [Thread-9] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 12:33:24,621 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:33:24,624 INFO com.netflix.discovery.DiscoveryClient [Thread-9] Shutting down DiscoveryClient ...
2020-04-04 12:33:27,629 INFO com.netflix.discovery.DiscoveryClient [Thread-9] Unregistering ...
2020-04-04 12:33:27,634 INFO com.netflix.discovery.DiscoveryClient [Thread-9] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 12:33:27,680 INFO com.netflix.discovery.DiscoveryClient [Thread-9] Completed shut down of DiscoveryClient
2020-04-04 12:33:29,803 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Fetching config from server at : http://localhost:8888
2020-04-04 12:33:31,826 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 12:33:31,827 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 12:33:31,830 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-04-04 12:33:33,061 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=9a674b87-e002-39cc-bf5e-fdb47e7ceb3e
2020-04-04 12:33:33,092 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 12:33:33,228 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8776 (http)
2020-04-04 12:33:33,229 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 12:33:33,229 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-04-04 12:33:33,230 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 12:33:33,296 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-04-04 12:33:33,296 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1456 ms
2020-04-04 12:33:34,033 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] Unable to start LiveReload server
2020-04-04 12:33:34,214 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 12:33:34,252 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [restartedMain] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 12:33:34,269 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-04-04 12:33:34,270 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 12:33:34,383 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 12:33:34,481 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 12:33:34,489 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e883146fbc17e4016dce370', description='null'}-localhost:27017] Opened connection [connectionId{localValue:3, serverValue:207}] to localhost:27017
2020-04-04 12:33:34,492 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e883146fbc17e4016dce370', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1378900}
2020-04-04 12:33:35,568 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 12:33:35,663 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2020-04-04 12:33:35,671 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2020-04-04 12:33:35,676 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2020-04-04 12:33:35,676 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2020-04-04 12:33:35,676 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2020-04-04 12:33:35,676 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2020-04-04 12:33:35,737 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2020-04-04 12:33:35,739 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2020-04-04 12:33:35,739 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2020-04-04 12:33:35,739 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2020-04-04 12:33:35,739 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2020-04-04 12:33:35,739 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2020-04-04 12:33:35,739 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2020-04-04 12:33:35,739 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2020-04-04 12:33:35,750 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2020-04-04 12:33:35,751 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2020-04-04 12:33:35,752 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 12:33:35,753 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1585983815753 with initial instances count: 3
2020-04-04 12:33:35,754 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 12:33:35,755 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1585983815755, current=UP, previous=STARTING]
2020-04-04 12:33:35,755 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:33:35,756 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Context refreshed
2020-04-04 12:33:35,757 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Found 1 custom documentation plugin(s)
2020-04-04 12:33:35,762 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:33:35,763 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [restartedMain] Scanning for api listing references
2020-04-04 12:33:35,826 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_1
2020-04-04 12:33:35,829 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_2
2020-04-04 12:33:35,877 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 12:33:35,885 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 12:33:35,886 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8776
2020-04-04 12:33:36,303 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8776-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-04 12:33:36,303 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Initializing Servlet 'dispatcherServlet'
2020-04-04 12:33:36,307 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Completed initialization in 4 ms
2020-04-04 12:33:36,536 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] Started RulesEngineApplication in 8.261 seconds (JVM running for 4073.37)
2020-04-04 12:33:36,539 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-04-04 12:37:52,270 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [Thread-17] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 12:37:52,272 WARN com.netflix.discovery.DiscoveryClient [Thread-17] Saw local status change event StatusChangeEvent [timestamp=1585984072272, current=DOWN, previous=UP]
2020-04-04 12:37:52,273 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:37:52,283 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [Thread-17] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 12:37:52,295 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:37:52,300 INFO com.netflix.discovery.DiscoveryClient [Thread-17] Shutting down DiscoveryClient ...
2020-04-04 12:37:55,308 INFO com.netflix.discovery.DiscoveryClient [Thread-17] Unregistering ...
2020-04-04 12:37:55,318 INFO com.netflix.discovery.DiscoveryClient [Thread-17] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 12:37:55,354 INFO com.netflix.discovery.DiscoveryClient [Thread-17] Completed shut down of DiscoveryClient
2020-04-04 12:37:57,285 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Fetching config from server at : http://localhost:8888
2020-04-04 12:37:59,306 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 12:37:59,306 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 12:37:59,307 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-04-04 12:38:00,291 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=9a674b87-e002-39cc-bf5e-fdb47e7ceb3e
2020-04-04 12:38:00,310 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 12:38:00,418 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8776 (http)
2020-04-04 12:38:00,419 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 12:38:00,420 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-04-04 12:38:00,420 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 12:38:00,479 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-04-04 12:38:00,479 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1165 ms
2020-04-04 12:38:01,899 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] Unable to start LiveReload server
2020-04-04 12:38:02,062 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 12:38:02,100 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [restartedMain] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 12:38:02,115 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-04-04 12:38:02,115 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 12:38:02,170 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 12:38:02,251 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 12:38:02,257 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e883252fbc17e4016dce371', description='null'}-localhost:27017] Opened connection [connectionId{localValue:4, serverValue:208}] to localhost:27017
2020-04-04 12:38:02,260 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e883252fbc17e4016dce371', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=858400}
2020-04-04 12:38:02,905 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 12:38:02,939 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2020-04-04 12:38:02,942 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2020-04-04 12:38:02,945 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2020-04-04 12:38:02,945 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2020-04-04 12:38:02,945 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2020-04-04 12:38:02,945 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2020-04-04 12:38:02,991 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2020-04-04 12:38:02,993 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2020-04-04 12:38:02,993 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2020-04-04 12:38:02,993 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2020-04-04 12:38:02,993 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2020-04-04 12:38:02,993 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2020-04-04 12:38:02,993 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2020-04-04 12:38:02,993 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2020-04-04 12:38:02,999 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2020-04-04 12:38:03,000 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2020-04-04 12:38:03,000 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 12:38:03,001 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1585984083001 with initial instances count: 3
2020-04-04 12:38:03,002 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 12:38:03,002 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1585984083002, current=UP, previous=STARTING]
2020-04-04 12:38:03,003 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:38:03,004 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Context refreshed
2020-04-04 12:38:03,005 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Found 1 custom documentation plugin(s)
2020-04-04 12:38:03,011 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [restartedMain] Scanning for api listing references
2020-04-04 12:38:03,011 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:38:03,060 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_1
2020-04-04 12:38:03,062 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_2
2020-04-04 12:38:03,105 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 12:38:03,113 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 12:38:03,114 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8776
2020-04-04 12:38:03,899 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] Started RulesEngineApplication in 7.985 seconds (JVM running for 4340.732)
2020-04-04 12:38:03,901 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-04-04 12:38:11,238 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8776-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-04 12:38:11,239 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Initializing Servlet 'dispatcherServlet'
2020-04-04 12:38:11,246 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Completed initialization in 7 ms
2020-04-04 12:42:56,304 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [Thread-25] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 12:42:56,304 WARN com.netflix.discovery.DiscoveryClient [Thread-25] Saw local status change event StatusChangeEvent [timestamp=1585984376304, current=DOWN, previous=UP]
2020-04-04 12:42:56,305 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:42:56,308 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [Thread-25] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 12:42:56,314 INFO com.netflix.discovery.DiscoveryClient [Thread-25] Shutting down DiscoveryClient ...
2020-04-04 12:42:56,316 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:42:56,319 INFO com.netflix.discovery.DiscoveryClient [Thread-25] Unregistering ...
2020-04-04 12:42:56,326 INFO com.netflix.discovery.DiscoveryClient [Thread-25] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 12:42:56,344 INFO com.netflix.discovery.DiscoveryClient [Thread-25] Completed shut down of DiscoveryClient
2020-04-04 12:42:58,216 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Fetching config from server at : http://localhost:8888
2020-04-04 12:43:00,228 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 12:43:00,228 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 12:43:00,230 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-04-04 12:43:00,957 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=9a674b87-e002-39cc-bf5e-fdb47e7ceb3e
2020-04-04 12:43:00,974 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 12:43:01,074 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8776 (http)
2020-04-04 12:43:01,075 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 12:43:01,076 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-04-04 12:43:01,076 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 12:43:01,139 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-04-04 12:43:01,139 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 903 ms
2020-04-04 12:43:01,961 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] Unable to start LiveReload server
2020-04-04 12:43:02,115 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 12:43:02,149 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [restartedMain] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 12:43:02,158 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-04-04 12:43:02,159 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 12:43:02,200 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 12:43:02,314 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 12:43:02,327 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e88337efbc17e4016dce372', description='null'}-localhost:27017] Opened connection [connectionId{localValue:5, serverValue:209}] to localhost:27017
2020-04-04 12:43:02,331 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e88337efbc17e4016dce372', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1391000}
2020-04-04 12:43:03,077 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 12:43:03,129 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2020-04-04 12:43:03,136 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2020-04-04 12:43:03,137 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2020-04-04 12:43:03,137 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2020-04-04 12:43:03,137 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2020-04-04 12:43:03,137 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2020-04-04 12:43:03,197 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2020-04-04 12:43:03,198 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2020-04-04 12:43:03,198 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2020-04-04 12:43:03,198 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2020-04-04 12:43:03,198 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2020-04-04 12:43:03,199 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2020-04-04 12:43:03,199 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2020-04-04 12:43:03,199 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2020-04-04 12:43:03,210 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2020-04-04 12:43:03,217 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2020-04-04 12:43:03,219 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 12:43:03,221 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1585984383220 with initial instances count: 3
2020-04-04 12:43:03,222 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 12:43:03,223 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1585984383223, current=UP, previous=STARTING]
2020-04-04 12:43:03,224 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Context refreshed
2020-04-04 12:43:03,225 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Found 1 custom documentation plugin(s)
2020-04-04 12:43:03,236 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:43:03,242 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [restartedMain] Scanning for api listing references
2020-04-04 12:43:03,257 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:43:03,324 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_1
2020-04-04 12:43:03,329 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_2
2020-04-04 12:43:03,396 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 12:43:03,408 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 12:43:03,409 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8776
2020-04-04 12:43:03,863 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8776-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-04 12:43:03,863 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Initializing Servlet 'dispatcherServlet'
2020-04-04 12:43:03,872 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Completed initialization in 9 ms
2020-04-04 12:43:04,285 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] Started RulesEngineApplication in 7.235 seconds (JVM running for 4641.118)
2020-04-04 12:43:04,288 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-04-04 12:44:51,282 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [Thread-33] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 12:44:51,282 WARN com.netflix.discovery.DiscoveryClient [Thread-33] Saw local status change event StatusChangeEvent [timestamp=1585984491282, current=DOWN, previous=UP]
2020-04-04 12:44:51,282 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:44:51,288 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [Thread-33] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 12:44:51,298 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:44:51,299 INFO com.netflix.discovery.DiscoveryClient [Thread-33] Shutting down DiscoveryClient ...
2020-04-04 12:44:54,302 INFO com.netflix.discovery.DiscoveryClient [Thread-33] Unregistering ...
2020-04-04 12:44:54,311 INFO com.netflix.discovery.DiscoveryClient [Thread-33] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 12:44:54,339 INFO com.netflix.discovery.DiscoveryClient [Thread-33] Completed shut down of DiscoveryClient
2020-04-04 12:44:56,120 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Fetching config from server at : http://localhost:8888
2020-04-04 12:44:58,129 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 12:44:58,130 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 12:44:58,132 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-04-04 12:44:58,923 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=9a674b87-e002-39cc-bf5e-fdb47e7ceb3e
2020-04-04 12:44:58,940 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 12:44:59,047 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8776 (http)
2020-04-04 12:44:59,048 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 12:44:59,049 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-04-04 12:44:59,049 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 12:44:59,107 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-04-04 12:44:59,107 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 962 ms
2020-04-04 12:44:59,847 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] Unable to start LiveReload server
2020-04-04 12:45:00,044 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 12:45:00,075 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [restartedMain] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 12:45:00,089 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-04-04 12:45:00,089 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 12:45:00,138 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 12:45:00,194 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 12:45:00,200 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8833f4fbc17e4016dce373', description='null'}-localhost:27017] Opened connection [connectionId{localValue:6, serverValue:210}] to localhost:27017
2020-04-04 12:45:00,202 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8833f4fbc17e4016dce373', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1161200}
2020-04-04 12:45:01,222 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 12:45:01,328 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2020-04-04 12:45:01,338 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2020-04-04 12:45:01,348 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2020-04-04 12:45:01,349 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2020-04-04 12:45:01,350 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2020-04-04 12:45:01,351 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2020-04-04 12:45:01,441 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2020-04-04 12:45:01,442 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2020-04-04 12:45:01,442 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2020-04-04 12:45:01,442 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2020-04-04 12:45:01,442 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2020-04-04 12:45:01,442 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2020-04-04 12:45:01,442 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2020-04-04 12:45:01,443 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2020-04-04 12:45:01,449 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2020-04-04 12:45:01,450 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2020-04-04 12:45:01,450 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 12:45:01,451 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1585984501451 with initial instances count: 3
2020-04-04 12:45:01,453 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 12:45:01,453 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1585984501453, current=UP, previous=STARTING]
2020-04-04 12:45:01,454 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:45:01,454 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Context refreshed
2020-04-04 12:45:01,455 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Found 1 custom documentation plugin(s)
2020-04-04 12:45:01,462 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [restartedMain] Scanning for api listing references
2020-04-04 12:45:01,462 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:45:01,506 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_1
2020-04-04 12:45:01,509 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_2
2020-04-04 12:45:01,544 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 12:45:01,551 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 12:45:01,551 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8776
2020-04-04 12:45:01,889 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8776-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-04 12:45:01,889 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Initializing Servlet 'dispatcherServlet'
2020-04-04 12:45:01,897 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Completed initialization in 8 ms
2020-04-04 12:45:02,184 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] Started RulesEngineApplication in 7.185 seconds (JVM running for 4759.017)
2020-04-04 12:45:02,187 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-04-04 12:47:29,370 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [Thread-41] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 12:47:29,371 WARN com.netflix.discovery.DiscoveryClient [Thread-41] Saw local status change event StatusChangeEvent [timestamp=1585984649371, current=DOWN, previous=UP]
2020-04-04 12:47:29,371 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:47:29,375 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [Thread-41] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 12:47:29,381 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:47:29,383 INFO com.netflix.discovery.DiscoveryClient [Thread-41] Shutting down DiscoveryClient ...
2020-04-04 12:47:32,384 WARN com.netflix.discovery.TimedSupervisorTask [DiscoveryClient-0] task supervisor shutting down, can't accept the task
2020-04-04 12:47:32,385 INFO com.netflix.discovery.DiscoveryClient [Thread-41] Unregistering ...
2020-04-04 12:47:32,389 INFO com.netflix.discovery.DiscoveryClient [Thread-41] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 12:47:32,402 INFO com.netflix.discovery.DiscoveryClient [Thread-41] Completed shut down of DiscoveryClient
2020-04-04 12:47:34,190 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Fetching config from server at : http://localhost:8888
2020-04-04 12:47:36,210 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 12:47:36,211 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 12:47:36,213 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-04-04 12:47:37,358 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=9a674b87-e002-39cc-bf5e-fdb47e7ceb3e
2020-04-04 12:47:37,374 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 12:47:37,453 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8776 (http)
2020-04-04 12:47:37,454 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 12:47:37,454 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-04-04 12:47:37,455 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 12:47:37,496 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-04-04 12:47:37,496 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1275 ms
2020-04-04 12:47:38,377 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] Unable to start LiveReload server
2020-04-04 12:47:38,555 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 12:47:38,595 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [restartedMain] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 12:47:38,605 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-04-04 12:47:38,607 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 12:47:38,650 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 12:47:38,692 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 12:47:38,696 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e883492fbc17e4016dce374', description='null'}-localhost:27017] Opened connection [connectionId{localValue:7, serverValue:211}] to localhost:27017
2020-04-04 12:47:38,698 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e883492fbc17e4016dce374', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=665300}
2020-04-04 12:47:39,479 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 12:47:39,508 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2020-04-04 12:47:39,511 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2020-04-04 12:47:39,513 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2020-04-04 12:47:39,514 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2020-04-04 12:47:39,514 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2020-04-04 12:47:39,514 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2020-04-04 12:47:39,551 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2020-04-04 12:47:39,552 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2020-04-04 12:47:39,552 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2020-04-04 12:47:39,552 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2020-04-04 12:47:39,552 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2020-04-04 12:47:39,552 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2020-04-04 12:47:39,552 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2020-04-04 12:47:39,552 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2020-04-04 12:47:39,557 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2020-04-04 12:47:39,558 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2020-04-04 12:47:39,558 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 12:47:39,559 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1585984659559 with initial instances count: 3
2020-04-04 12:47:39,560 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 12:47:39,560 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1585984659560, current=UP, previous=STARTING]
2020-04-04 12:47:39,561 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:47:39,561 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Context refreshed
2020-04-04 12:47:39,562 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Found 1 custom documentation plugin(s)
2020-04-04 12:47:39,569 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [restartedMain] Scanning for api listing references
2020-04-04 12:47:39,569 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:47:39,609 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_1
2020-04-04 12:47:39,611 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_2
2020-04-04 12:47:39,650 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 12:47:39,656 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 12:47:39,657 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8776
2020-04-04 12:47:39,692 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8776-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-04 12:47:39,692 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Initializing Servlet 'dispatcherServlet'
2020-04-04 12:47:39,699 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Completed initialization in 7 ms
2020-04-04 12:47:40,550 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] Started RulesEngineApplication in 7.694 seconds (JVM running for 4917.384)
2020-04-04 12:47:40,552 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-04-04 12:48:12,445 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 12:48:12,467 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 12:48:12,470 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 12:48:12,892 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 12:48:13,315 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 12:48:13,363 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6baee63b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1002b06d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@234bfc8c, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5008559a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4c0bfe9e, org.springframework.test.context.event.EventPublishingTestExecutionListener@490fbeaa, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@35dc849b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@276aa33f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@34065642, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@c85486, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@51e1e058]
2020-04-04 12:48:17,540 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 12:48:19,913 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 12:48:19,915 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 12:48:19,967 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 12:48:22,206 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 12:48:22,581 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 12:48:23,046 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 12:48:24,013 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 12:48:24,013 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 12:48:24,057 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3673481e
2020-04-04 12:48:27,219 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 12:48:27,629 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 12:48:28,194 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 12:48:28,194 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 12:48:29,086 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 12:48:31,470 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 12:48:31,669 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8834c724af365e3e4731cd', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:212}] to localhost:27017
2020-04-04 12:48:31,684 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8834c724af365e3e4731cd', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=9422700}
2020-04-04 12:48:32,524 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 12:48:32,752 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 12:48:32,798 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 12:48:32,877 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 12:48:33,187 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 12:48:33,194 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 12:48:33,349 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 19.276 seconds (JVM running for 23.483)
2020-04-04 12:48:38,065 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 12:48:40,080 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 12:48:40,082 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 12:48:40,088 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 12:48:41,105 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 12:48:41,133 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 12:48:41,580 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 12:48:41,619 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 12:48:41,620 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 12:48:41,621 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 12:48:41,978 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 12:48:41,979 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1871 ms
2020-04-04 12:48:43,024 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 12:48:43,066 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 12:48:43,075 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 12:48:43,135 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 12:48:43,211 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 12:48:43,221 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8834d324af365e3e4731ce', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:213}] to localhost:27017
2020-04-04 12:48:43,224 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8834d324af365e3e4731ce', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2015200}
2020-04-04 12:48:43,810 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 12:48:43,868 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 12:48:43,969 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 12:48:44,143 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 12:48:44,143 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 12:48:44,403 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 12:48:44,404 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 12:48:44,873 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 12:48:45,374 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 12:48:45,375 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 12:48:45,375 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 12:48:45,375 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 12:48:45,375 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 12:48:45,375 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 12:48:45,375 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 12:48:45,698 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 12:48:45,703 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 12:48:45,709 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 12:48:45,716 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1585984725714 with initial instances count: 3
2020-04-04 12:48:45,718 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 12:48:45,719 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1585984725719, current=UP, previous=STARTING]
2020-04-04 12:48:45,725 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 12:48:45,726 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:48:45,727 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 12:48:45,741 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 12:48:45,785 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:48:45,855 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 12:48:45,862 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 12:48:45,923 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 12:48:45,947 INFO org.apache.coyote.http11.Http11NioProtocol [main] Pausing ProtocolHandler ["http-nio-8776"]
2020-04-04 12:48:45,947 INFO org.apache.catalina.core.StandardService [main] Stopping service [Tomcat]
2020-04-04 12:48:45,970 WARN org.apache.catalina.loader.WebappClassLoaderBase [main] The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)
 java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2081)
 java.base@11.0.5/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:433)
 java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.5/java.lang.Thread.run(Thread.java:834)
2020-04-04 12:48:45,973 INFO org.apache.coyote.http11.Http11NioProtocol [main] Stopping ProtocolHandler ["http-nio-8776"]
2020-04-04 12:48:45,973 INFO org.apache.coyote.http11.Http11NioProtocol [main] Destroying ProtocolHandler ["http-nio-8776"]
2020-04-04 12:48:45,978 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-04-04 12:48:45,979 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 12:48:45,979 WARN com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1585984725979, current=DOWN, previous=UP]
2020-04-04 12:48:45,980 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:48:45,991 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [main] Invocation of destroy method failed on bean with name 'tomcatMetricsBinder': java.lang.NullPointerException
2020-04-04 12:48:45,992 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 12:48:45,994 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:48:46,009 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-04-04 12:48:49,021 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-04-04 12:48:49,038 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 12:48:49,097 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-04-04 12:48:49,109 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [main] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8776 was already in use.

Action:

Identify and stop the process that's listening on port 8776 or configure this application to listen on another port.

2020-04-04 12:48:49,291 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 12:48:49,291 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 12:48:49,339 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 12:48:49,340 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 12:48:49,360 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 12:48:49,366 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 12:48:49,374 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 12:49:12,652 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 12:49:12,676 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 12:49:12,678 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 12:49:13,107 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 12:49:13,475 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 12:49:13,515 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6baee63b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1002b06d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@234bfc8c, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5008559a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4c0bfe9e, org.springframework.test.context.event.EventPublishingTestExecutionListener@490fbeaa, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@35dc849b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@276aa33f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@34065642, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@c85486, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@51e1e058]
2020-04-04 12:49:18,199 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 12:49:20,465 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 12:49:20,466 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 12:49:20,515 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 12:49:22,734 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 12:49:23,130 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 12:49:23,543 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 12:49:24,523 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 12:49:24,523 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 12:49:24,557 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@42b71591
2020-04-04 12:49:27,957 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 12:49:28,410 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 12:49:28,829 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 12:49:28,830 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 12:49:29,609 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 12:49:31,528 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 12:49:31,663 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e88350313bd4771e56bda46', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:214}] to localhost:27017
2020-04-04 12:49:31,674 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e88350313bd4771e56bda46', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=6527000}
2020-04-04 12:49:32,728 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 12:49:32,998 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 12:49:33,038 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 12:49:33,119 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 12:49:33,402 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 12:49:33,408 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 12:49:33,542 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 19.333 seconds (JVM running for 23.471)
2020-04-04 12:49:36,204 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 12:49:38,225 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 12:49:38,226 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 12:49:38,230 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 12:49:39,259 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 12:49:39,285 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 12:49:39,630 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 12:49:39,656 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 12:49:39,658 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 12:49:39,658 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 12:49:40,005 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 12:49:40,005 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1755 ms
2020-04-04 12:49:41,277 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 12:49:41,327 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 12:49:41,335 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 12:49:41,396 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 12:49:41,480 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 12:49:41,488 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e88350d13bd4771e56bda47', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:215}] to localhost:27017
2020-04-04 12:49:41,492 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e88350d13bd4771e56bda47', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2103500}
2020-04-04 12:49:42,026 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 12:49:42,081 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 12:49:42,146 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 12:49:42,287 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 12:49:42,287 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 12:49:42,562 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 12:49:42,562 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 12:49:43,125 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 12:49:43,548 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 12:49:43,549 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 12:49:43,549 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 12:49:43,550 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 12:49:43,550 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 12:49:43,550 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 12:49:43,550 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 12:49:43,818 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 12:49:43,822 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 12:49:43,826 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 12:49:43,831 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1585984783830 with initial instances count: 2
2020-04-04 12:49:43,832 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 12:49:43,833 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1585984783833, current=UP, previous=STARTING]
2020-04-04 12:49:43,836 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 12:49:43,837 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:49:43,837 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 12:49:43,845 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 12:49:43,890 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:49:43,949 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 12:49:43,953 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 12:49:44,014 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 12:49:44,069 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 12:49:44,071 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 12:49:44,607 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 9.968 seconds (JVM running for 34.535)
2020-04-04 12:49:44,682 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 12:49:44,682 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 12:49:44,727 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 12:49:44,727 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 12:49:44,744 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 12:49:44,745 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1585984784745, current=DOWN, previous=UP]
2020-04-04 12:49:44,745 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:49:44,747 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 12:49:44,754 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 12:49:44,758 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:49:46,371 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 12:49:46,372 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 12:49:46,385 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 12:49:49,394 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 12:49:49,410 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 12:49:49,480 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-04 12:51:06,663 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 12:51:06,695 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 12:51:06,698 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 12:51:07,180 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 12:51:07,698 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 12:51:07,734 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6baee63b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1002b06d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@234bfc8c, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5008559a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4c0bfe9e, org.springframework.test.context.event.EventPublishingTestExecutionListener@490fbeaa, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@35dc849b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@276aa33f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@34065642, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@c85486, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@51e1e058]
2020-04-04 12:51:12,064 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 12:51:14,407 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 12:51:14,408 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 12:51:14,478 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 12:51:16,946 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 12:51:17,472 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 12:51:17,936 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 12:51:19,025 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 12:51:19,025 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 12:51:19,059 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@42b71591
2020-04-04 12:51:21,828 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 12:51:22,215 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 12:51:22,537 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 12:51:22,537 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 12:51:23,097 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 12:51:24,571 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 12:51:24,715 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e883574c8e8a42d95697eb6', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:216}] to localhost:27017
2020-04-04 12:51:24,727 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e883574c8e8a42d95697eb6', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=7966900}
2020-04-04 12:51:25,642 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 12:51:25,927 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 12:51:25,964 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 12:51:26,051 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 12:51:26,368 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 12:51:26,372 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 12:51:26,495 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 17.891 seconds (JVM running for 22.803)
2020-04-04 12:51:29,398 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 12:51:31,424 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 12:51:31,425 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 12:51:31,429 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 12:51:32,544 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 12:51:32,574 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 12:51:32,907 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 12:51:32,931 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 12:51:32,932 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 12:51:32,932 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 12:51:33,267 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 12:51:33,267 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1816 ms
2020-04-04 12:51:34,463 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 12:51:34,505 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 12:51:34,513 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 12:51:34,577 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 12:51:34,655 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 12:51:34,665 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e88357ec8e8a42d95697eb7', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:217}] to localhost:27017
2020-04-04 12:51:34,670 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e88357ec8e8a42d95697eb7', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2995500}
2020-04-04 12:51:35,270 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 12:51:35,339 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 12:51:35,410 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 12:51:35,563 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 12:51:35,563 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 12:51:35,918 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 12:51:35,918 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 12:51:36,408 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 12:51:36,788 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 12:51:36,789 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 12:51:36,789 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 12:51:36,789 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 12:51:36,789 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 12:51:36,789 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 12:51:36,789 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 12:51:37,056 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 12:51:37,059 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 12:51:37,064 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 12:51:37,069 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1585984897068 with initial instances count: 2
2020-04-04 12:51:37,072 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 12:51:37,073 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1585984897073, current=UP, previous=STARTING]
2020-04-04 12:51:37,076 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 12:51:37,077 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:51:37,078 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 12:51:37,088 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 12:51:37,129 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:51:37,193 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 12:51:37,198 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 12:51:37,295 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 12:51:37,354 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 12:51:37,356 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 12:51:37,989 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 10.354 seconds (JVM running for 34.296)
2020-04-04 12:51:38,190 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 12:51:38,191 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 12:51:38,287 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 12:51:38,287 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 12:51:41,538 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 12:51:41,538 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1585984901538, current=DOWN, previous=UP]
2020-04-04 12:51:41,539 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:51:41,540 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 12:51:41,546 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 12:51:41,553 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:51:41,554 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 12:51:41,554 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 12:51:41,568 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 12:51:44,578 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 12:51:44,599 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 12:51:44,671 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-04 12:53:30,049 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 12:53:30,071 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 12:53:30,073 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 12:53:30,476 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 12:53:30,816 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 12:53:30,849 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@f5f8de2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6baee63b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1002b06d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@234bfc8c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5008559a, org.springframework.test.context.event.EventPublishingTestExecutionListener@4c0bfe9e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@490fbeaa, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@35dc849b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@276aa33f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@34065642, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@c85486]
2020-04-04 12:53:35,036 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 12:53:37,304 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 12:53:37,305 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 12:53:37,356 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 12:53:39,448 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 12:53:39,868 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 12:53:40,306 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 12:53:41,265 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 12:53:41,266 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 12:53:41,298 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@20b30c5f
2020-04-04 12:53:43,621 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 12:53:43,960 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 12:53:44,307 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 12:53:44,308 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 12:53:44,877 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 12:53:46,738 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 12:53:47,065 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8836025e953e73781f8cd3', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:218}] to localhost:27017
2020-04-04 12:53:47,080 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8836025e953e73781f8cd3', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=9680900}
2020-04-04 12:53:48,734 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 12:53:48,907 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 12:53:48,941 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 12:53:49,010 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 12:53:49,327 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 12:53:49,333 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 12:53:49,464 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 17.928 seconds (JVM running for 22.007)
2020-04-04 12:53:52,942 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 12:53:54,979 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 12:53:54,981 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 12:53:54,987 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 12:53:55,827 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 12:53:55,853 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 12:53:56,271 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 12:53:56,298 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 12:53:56,300 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 12:53:56,301 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 12:53:56,607 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 12:53:56,607 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1592 ms
2020-04-04 12:53:58,535 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 12:53:58,581 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 12:53:58,590 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 12:53:58,652 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 12:53:58,731 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 12:53:58,740 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e88360e5e953e73781f8cd4', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:219}] to localhost:27017
2020-04-04 12:53:58,743 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e88360e5e953e73781f8cd4', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1495000}
2020-04-04 12:53:59,340 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 12:53:59,415 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 12:53:59,490 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 12:53:59,653 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 12:53:59,653 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 12:53:59,929 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 12:53:59,929 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 12:54:00,402 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 12:54:00,794 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 12:54:00,794 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 12:54:00,794 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 12:54:00,794 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 12:54:00,794 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 12:54:00,794 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 12:54:00,795 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 12:54:01,075 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 12:54:01,082 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 12:54:01,091 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 12:54:01,100 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1585985041098 with initial instances count: 2
2020-04-04 12:54:01,104 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 12:54:01,106 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1585985041106, current=UP, previous=STARTING]
2020-04-04 12:54:01,114 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:54:01,114 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 12:54:01,116 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 12:54:01,132 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 12:54:01,208 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:54:01,275 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 12:54:01,279 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 12:54:01,336 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 12:54:01,376 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 12:54:01,377 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 12:54:01,895 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 11.248 seconds (JVM running for 34.438)
2020-04-04 12:54:02,047 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 12:54:02,048 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 12:54:02,128 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 12:54:02,128 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 12:54:03,138 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 12:54:03,138 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1585985043138, current=DOWN, previous=UP]
2020-04-04 12:54:03,139 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 12:54:03,140 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 12:54:03,146 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 12:54:03,147 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 12:54:03,151 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 12:54:03,151 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 12:54:03,164 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 12:54:06,172 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 12:54:06,191 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 12:54:06,270 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-04 13:22:42,837 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 13:22:42,878 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 13:22:42,886 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 13:22:43,479 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 13:22:44,053 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 13:22:44,115 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@f5f8de2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6baee63b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1002b06d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@234bfc8c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5008559a, org.springframework.test.context.event.EventPublishingTestExecutionListener@4c0bfe9e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@490fbeaa, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@35dc849b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@276aa33f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@34065642, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@c85486]
2020-04-04 13:22:48,004 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 13:22:50,232 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 13:22:50,233 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 13:22:50,249 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 13:22:52,374 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 13:22:52,827 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 13:22:53,731 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 13:22:55,264 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 13:22:55,265 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 13:22:55,307 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@c1a9505
2020-04-04 13:22:59,637 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 13:22:59,948 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 13:23:00,285 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 13:23:00,285 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 13:23:00,832 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 13:23:02,347 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 13:23:02,503 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e883cde60b3bb0710938600', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:220}] to localhost:27017
2020-04-04 13:23:02,515 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e883cde60b3bb0710938600', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=7791200}
2020-04-04 13:23:03,196 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 13:23:03,368 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 13:23:03,398 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 13:23:03,466 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 13:23:03,740 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 13:23:03,747 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 13:23:03,887 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 19.009 seconds (JVM running for 24.498)
2020-04-04 13:23:06,767 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 13:23:08,776 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 13:23:08,776 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 13:23:08,778 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 13:23:09,477 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 13:23:09,501 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 13:23:09,883 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 13:23:09,909 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 13:23:09,910 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 13:23:09,910 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 13:23:10,285 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 13:23:10,286 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1504 ms
2020-04-04 13:23:11,636 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 13:23:11,673 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 13:23:11,682 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 13:23:11,736 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 13:23:11,809 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 13:23:11,818 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e883ce760b3bb0710938601', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:221}] to localhost:27017
2020-04-04 13:23:11,822 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e883ce760b3bb0710938601', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2101600}
2020-04-04 13:23:12,388 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 13:23:12,447 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 13:23:12,511 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 13:23:12,652 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 13:23:12,652 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 13:23:12,876 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 13:23:12,876 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 13:23:13,251 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 13:23:13,626 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 13:23:13,626 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 13:23:13,626 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 13:23:13,626 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 13:23:13,626 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 13:23:13,626 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 13:23:13,626 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 13:23:13,831 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 13:23:13,834 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 13:23:13,838 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 13:23:13,842 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1585986793841 with initial instances count: 2
2020-04-04 13:23:13,844 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 13:23:13,845 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1585986793845, current=UP, previous=STARTING]
2020-04-04 13:23:13,848 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 13:23:13,848 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 13:23:13,849 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 13:23:13,857 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 13:23:13,893 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 13:23:13,943 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 13:23:13,948 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 13:23:14,001 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 13:23:14,038 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 13:23:14,039 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 13:23:14,471 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 9.18 seconds (JVM running for 35.082)
2020-04-04 13:23:14,586 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 13:23:14,587 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 13:23:14,640 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 13:23:14,640 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 13:23:14,653 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 13:23:14,653 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1585986794653, current=DOWN, previous=UP]
2020-04-04 13:23:14,654 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 13:23:14,655 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 13:23:14,661 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 13:23:14,664 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 13:23:16,530 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 13:23:16,530 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 13:23:16,539 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 13:23:19,543 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 13:23:19,547 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 13:23:19,558 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-04 15:07:19,043 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 15:07:19,061 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 15:07:19,063 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 15:07:19,410 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 15:07:19,815 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 15:07:19,855 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@76b019c4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@221961af, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@32ddcca, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1ddc8fc, org.springframework.test.context.support.DirtiesContextTestExecutionListener@77d58f3a, org.springframework.test.context.event.EventPublishingTestExecutionListener@1e288c76, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@738ed8f5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1cfb7450, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@478c84aa, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1d1deb11, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@18d1d137]
2020-04-04 15:07:23,547 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 15:07:25,814 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 15:07:25,815 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 15:07:25,853 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 15:07:27,688 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 15:07:28,010 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 15:07:28,360 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 15:07:29,216 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:07:29,217 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:07:29,254 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7c2a5a0d
2020-04-04 15:07:31,844 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 15:07:32,312 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 15:07:32,647 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:07:32,647 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:07:33,361 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 15:07:34,766 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 15:07:34,896 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e88555eeec2f50143ddb3c6', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:222}] to localhost:27017
2020-04-04 15:07:34,908 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e88555eeec2f50143ddb3c6', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=7612400}
2020-04-04 15:07:35,723 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 15:07:35,964 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 15:07:36,011 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 15:07:36,103 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 15:07:36,448 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 15:07:36,456 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 15:07:36,583 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 15.996 seconds (JVM running for 19.788)
2020-04-04 15:07:40,659 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 15:07:40,663 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 15:07:40,671 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 15:08:33,550 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 15:08:33,559 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 15:08:33,560 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 15:08:33,763 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 15:08:33,951 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 15:08:33,966 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5df417a7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7c041b41, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7f69d591, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@61078690, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1cb3ec38, org.springframework.test.context.event.EventPublishingTestExecutionListener@403132fc, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@71c5b236, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2cab9998, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2f7a7219, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@669513d8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3a1d593e]
2020-04-04 15:08:36,198 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 15:08:38,335 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 15:08:38,336 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 15:08:38,356 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 15:08:39,765 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 15:08:40,027 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 15:08:40,271 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 15:08:40,914 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:08:40,914 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:08:40,934 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4db6348b
2020-04-04 15:08:42,498 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 15:08:42,771 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 15:08:43,009 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:08:43,010 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:08:43,414 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 15:08:44,425 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 15:08:44,506 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8855a4024e492894123f0a', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:223}] to localhost:27017
2020-04-04 15:08:44,516 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8855a4024e492894123f0a', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5532800}
2020-04-04 15:08:45,104 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 15:08:45,266 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 15:08:45,284 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 15:08:45,329 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 15:08:45,570 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 15:08:45,574 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 15:08:45,655 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 11.418 seconds (JVM running for 13.452)
2020-04-04 15:08:47,576 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 15:08:49,594 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 15:08:49,595 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 15:08:49,599 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 15:08:50,362 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 15:08:50,380 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 15:08:50,607 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 15:08:50,622 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 15:08:50,622 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 15:08:50,623 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 15:08:50,837 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 15:08:50,837 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1221 ms
2020-04-04 15:08:51,748 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 15:08:51,783 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 15:08:51,788 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 15:08:51,833 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 15:08:51,892 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 15:08:51,899 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8855ab024e492894123f0b', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:224}] to localhost:27017
2020-04-04 15:08:51,903 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8855ab024e492894123f0b', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1465000}
2020-04-04 15:08:52,416 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 15:08:52,465 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 15:08:52,511 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 15:08:52,621 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 15:08:52,622 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 15:08:52,822 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 15:08:52,822 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 15:08:53,129 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 15:08:53,475 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 15:08:53,475 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 15:08:53,475 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 15:08:53,475 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 15:08:53,475 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 15:08:53,475 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 15:08:53,476 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 15:08:53,670 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 15:08:53,674 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 15:08:53,679 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 15:08:53,685 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1585993133683 with initial instances count: 2
2020-04-04 15:08:53,687 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 15:08:53,689 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1585993133689, current=UP, previous=STARTING]
2020-04-04 15:08:53,693 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 15:08:53,693 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 15:08:53,695 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 15:08:53,713 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 15:08:53,746 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 15:08:53,799 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 15:08:53,803 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 15:08:53,863 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 15:08:53,902 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 15:08:53,903 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 15:08:54,431 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 8.05 seconds (JVM running for 22.228)
2020-04-04 15:08:54,614 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 15:08:54,614 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 15:08:54,703 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 15:08:54,703 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 15:08:54,725 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 15:08:54,725 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1585993134725, current=DOWN, previous=UP]
2020-04-04 15:08:54,726 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 15:08:54,728 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 15:08:54,739 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 15:08:54,740 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 15:08:54,741 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 15:08:54,744 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 15:08:54,756 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 15:08:57,762 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 15:08:57,783 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 15:08:57,835 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-04 15:09:08,687 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 15:09:08,711 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 15:09:08,713 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 15:09:09,075 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 15:09:09,411 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 15:09:09,440 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@f5f8de2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6baee63b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1002b06d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@234bfc8c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5008559a, org.springframework.test.context.event.EventPublishingTestExecutionListener@4c0bfe9e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@490fbeaa, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@35dc849b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@276aa33f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@34065642, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@c85486]
2020-04-04 15:09:13,044 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 15:09:15,272 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 15:09:15,274 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 15:09:15,315 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 15:09:17,251 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 15:09:17,629 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 15:09:18,013 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 15:09:18,865 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:09:18,865 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:09:18,894 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@20b30c5f
2020-04-04 15:09:21,014 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 15:09:21,351 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 15:09:21,728 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:09:21,729 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:09:22,306 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 15:09:23,563 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 15:09:23,697 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8855cbf7647b1de4e7ee52', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:225}] to localhost:27017
2020-04-04 15:09:23,709 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8855cbf7647b1de4e7ee52', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=7434100}
2020-04-04 15:09:24,482 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 15:09:24,662 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 15:09:24,690 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 15:09:24,761 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 15:09:25,028 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 15:09:25,034 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 15:09:25,136 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 14.76 seconds (JVM running for 18.905)
2020-04-04 15:09:27,725 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 15:09:29,747 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 15:09:29,748 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 15:09:29,752 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 15:09:30,488 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 15:09:30,513 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 15:09:30,831 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 15:09:30,854 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 15:09:30,854 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 15:09:30,855 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 15:09:31,256 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 15:09:31,256 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1489 ms
2020-04-04 15:09:32,616 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 15:09:32,647 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 15:09:32,653 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 15:09:32,697 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 15:09:32,756 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 15:09:32,764 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8855d4f7647b1de4e7ee53', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:226}] to localhost:27017
2020-04-04 15:09:32,768 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8855d4f7647b1de4e7ee53', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2009000}
2020-04-04 15:09:33,554 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 15:09:33,628 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 15:09:33,697 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 15:09:33,819 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 15:09:33,819 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 15:09:34,098 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 15:09:34,098 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 15:09:34,417 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 15:09:34,846 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 15:09:34,847 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 15:09:34,847 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 15:09:34,847 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 15:09:34,847 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 15:09:34,847 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 15:09:34,848 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 15:09:35,076 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 15:09:35,078 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 15:09:35,081 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 15:09:35,086 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1585993175084 with initial instances count: 2
2020-04-04 15:09:35,088 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 15:09:35,088 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1585993175088, current=UP, previous=STARTING]
2020-04-04 15:09:35,092 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 15:09:35,092 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 15:09:35,093 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 15:09:35,101 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 15:09:35,144 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 15:09:35,206 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 15:09:35,211 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 15:09:35,267 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 15:09:35,311 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 15:09:35,312 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 15:09:36,041 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 9.909 seconds (JVM running for 29.809)
2020-04-04 15:09:36,274 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 15:09:36,274 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 15:09:36,388 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 15:09:36,388 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 15:09:38,831 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 15:09:38,831 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1585993178831, current=DOWN, previous=UP]
2020-04-04 15:09:38,832 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 15:09:38,833 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 15:09:38,838 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 15:09:38,845 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 15:09:38,846 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 15:09:38,846 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 15:09:38,860 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 15:09:41,869 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 15:09:41,890 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 15:09:41,951 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-04 15:15:51,816 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-04-04 15:15:52,712 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Fetching config from server at : http://localhost:8888
2020-04-04 15:15:54,879 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 15:15:54,880 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 15:15:54,889 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-04-04 15:15:56,510 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 15:15:56,730 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=9a674b87-e002-39cc-bf5e-fdb47e7ceb3e
2020-04-04 15:15:56,936 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 15:15:58,070 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8776 (http)
2020-04-04 15:15:58,083 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 15:15:58,084 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-04-04 15:15:58,084 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 15:15:58,306 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-04-04 15:15:58,306 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 3345 ms
2020-04-04 15:15:58,471 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:15:58,471 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:15:58,489 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@9af00d7
2020-04-04 15:15:59,573 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] Unable to start LiveReload server
2020-04-04 15:16:00,077 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 15:16:00,178 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [restartedMain] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 15:16:00,204 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:16:00,204 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:16:00,498 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 15:16:00,921 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 15:16:01,001 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8857581b6a67659c7e553c', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:227}] to localhost:27017
2020-04-04 15:16:01,008 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8857581b6a67659c7e553c', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4783800}
2020-04-04 15:16:01,582 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 15:16:01,677 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2020-04-04 15:16:01,836 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2020-04-04 15:16:01,960 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2020-04-04 15:16:01,960 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2020-04-04 15:16:02,159 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2020-04-04 15:16:02,160 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2020-04-04 15:16:02,391 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2020-04-04 15:16:02,810 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2020-04-04 15:16:02,811 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2020-04-04 15:16:02,811 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2020-04-04 15:16:02,811 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2020-04-04 15:16:02,811 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2020-04-04 15:16:02,811 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2020-04-04 15:16:02,811 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2020-04-04 15:16:03,174 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2020-04-04 15:16:03,179 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2020-04-04 15:16:03,183 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 15:16:03,193 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1585993563190 with initial instances count: 2
2020-04-04 15:16:03,196 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 15:16:03,197 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1585993563197, current=UP, previous=STARTING]
2020-04-04 15:16:03,200 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 15:16:03,201 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Context refreshed
2020-04-04 15:16:03,232 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Found 1 custom documentation plugin(s)
2020-04-04 15:16:03,253 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 15:16:03,303 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [restartedMain] Scanning for api listing references
2020-04-04 15:16:03,565 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_1
2020-04-04 15:16:03,571 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_2
2020-04-04 15:16:03,683 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 15:16:03,725 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 15:16:03,727 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8776
2020-04-04 15:16:04,394 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] Started RulesEngineApplication in 13.694 seconds (JVM running for 15.138)
2020-04-04 15:19:24,777 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 15:19:24,795 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 15:19:24,797 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 15:19:25,178 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 15:19:25,540 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 15:19:25,572 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4c0bfe9e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@490fbeaa, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@35dc849b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@276aa33f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@34065642, org.springframework.test.context.event.EventPublishingTestExecutionListener@c85486, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@51e1e058, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@23e0c200, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@25d23478, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@677c2820, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@39c1e7b7]
2020-04-04 15:19:29,132 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 15:19:31,362 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 15:19:31,364 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 15:19:31,410 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 15:19:33,334 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 15:19:33,700 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 15:19:34,104 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 15:19:35,016 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:19:35,016 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:19:35,044 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@e63a7
2020-04-04 15:19:37,139 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 15:19:37,437 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 15:19:37,723 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:19:37,723 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:19:38,259 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 15:19:39,611 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 15:19:39,747 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8858335440f962f406c6c5', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:228}] to localhost:27017
2020-04-04 15:19:39,758 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8858335440f962f406c6c5', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=6565700}
2020-04-04 15:19:40,407 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 15:19:40,574 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 15:19:40,605 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 15:19:40,677 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 15:19:40,943 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 15:19:40,949 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 15:19:41,046 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 14.803 seconds (JVM running for 18.686)
2020-04-04 15:19:43,899 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 15:19:45,922 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 15:19:45,923 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 15:19:45,928 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 15:19:46,619 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 15:19:46,639 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 15:19:46,981 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 15:19:47,003 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 15:19:47,003 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 15:19:47,004 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 15:19:47,350 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 15:19:47,351 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1406 ms
2020-04-04 15:19:48,406 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 15:19:48,438 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 15:19:48,443 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 15:19:48,493 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 15:19:48,608 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 15:19:48,616 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e88583c5440f962f406c6c6', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:229}] to localhost:27017
2020-04-04 15:19:48,619 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e88583c5440f962f406c6c6', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1633200}
2020-04-04 15:19:49,218 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 15:19:49,271 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 15:19:49,338 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 15:19:49,547 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 15:19:49,547 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 15:19:49,807 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 15:19:49,808 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 15:19:50,179 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 15:19:50,589 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 15:19:50,589 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 15:19:50,589 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 15:19:50,591 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 15:19:50,591 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 15:19:50,591 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 15:19:50,591 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 15:19:50,817 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 15:19:50,822 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 15:19:50,825 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 15:19:50,829 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1585993790828 with initial instances count: 3
2020-04-04 15:19:50,831 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 15:19:50,831 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1585993790831, current=UP, previous=STARTING]
2020-04-04 15:19:50,833 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 15:19:50,834 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 15:19:50,836 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 15:19:50,845 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 15:19:50,880 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 15:19:50,938 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 15:19:50,943 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 15:19:50,988 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 15:19:51,025 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 15:19:51,026 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 15:19:51,675 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 9.679 seconds (JVM running for 29.315)
2020-04-04 15:19:51,942 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 15:19:51,943 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 15:19:52,022 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 15:19:52,022 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 15:19:54,414 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 15:19:54,414 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1585993794414, current=DOWN, previous=UP]
2020-04-04 15:19:54,415 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 15:19:54,416 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 15:19:54,422 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 15:19:54,427 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 15:19:54,427 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 15:19:54,428 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 15:19:54,444 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 15:19:57,450 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 15:19:57,469 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 15:19:57,527 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-04 15:24:38,957 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 15:24:38,974 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 15:24:38,976 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 15:24:39,336 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 15:24:39,638 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 15:24:39,667 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@18bc1064, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3cab07dd, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@68f264bf, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@77988c45, org.springframework.test.context.support.DirtiesContextTestExecutionListener@f5f8de2, org.springframework.test.context.event.EventPublishingTestExecutionListener@6baee63b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1002b06d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@234bfc8c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5008559a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4c0bfe9e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@490fbeaa]
2020-04-04 15:24:43,094 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 15:24:45,316 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 15:24:45,318 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 15:24:45,360 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 15:24:47,209 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 15:24:47,564 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 15:24:47,940 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 15:24:48,878 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:24:48,878 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:24:48,910 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5d12116e
2020-04-04 15:24:51,098 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 15:24:51,433 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 15:24:51,740 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:24:51,740 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:24:52,289 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 15:24:53,635 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 15:24:53,740 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e88596d7036017acdaaba48', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:230}] to localhost:27017
2020-04-04 15:24:53,750 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e88596d7036017acdaaba48', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5347700}
2020-04-04 15:24:54,755 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 15:24:54,970 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 15:24:55,008 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 15:24:55,074 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 15:24:55,318 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 15:24:55,323 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 15:24:55,412 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 15.113 seconds (JVM running for 18.846)
2020-04-04 15:24:58,114 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 15:24:58,118 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 15:24:58,129 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 15:25:39,587 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 15:25:39,595 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 15:25:39,596 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 15:25:39,777 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 15:25:40,012 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 15:25:40,036 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@361c294e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7859e786, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@285d851a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@314b8f2d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@664a9613, org.springframework.test.context.event.EventPublishingTestExecutionListener@5118388b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@15a902e7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7876d598, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4a3e3e8b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5af28b27, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@71104a4]
2020-04-04 15:25:42,064 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 15:25:44,195 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 15:25:44,197 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 15:25:44,224 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 15:25:45,688 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 15:25:45,935 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 15:25:46,181 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 15:25:46,799 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:25:46,799 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:25:46,821 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4cc4d454
2020-04-04 15:25:48,405 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 15:25:48,727 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 15:25:48,980 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:25:48,980 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:25:49,389 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 15:25:50,398 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 15:25:50,465 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8859a62458325ee8f5b845', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:231}] to localhost:27017
2020-04-04 15:25:50,473 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8859a62458325ee8f5b845', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4743200}
2020-04-04 15:25:51,023 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 15:25:51,197 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 15:25:51,218 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 15:25:51,271 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 15:25:51,485 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 15:25:51,488 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 15:25:51,561 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 11.199 seconds (JVM running for 13.751)
2020-04-04 15:25:53,534 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 15:25:55,551 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 15:25:55,552 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 15:25:55,556 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 15:25:56,248 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 15:25:56,268 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 15:25:56,508 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 15:25:56,525 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 15:25:56,526 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 15:25:56,526 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 15:25:56,760 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 15:25:56,760 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1188 ms
2020-04-04 15:25:57,645 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 15:25:57,681 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 15:25:57,689 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 15:25:57,743 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 15:25:57,813 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 15:25:57,820 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8859ad2458325ee8f5b846', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:232}] to localhost:27017
2020-04-04 15:25:57,823 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8859ad2458325ee8f5b846', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1439300}
2020-04-04 15:25:58,366 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 15:25:58,448 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 15:25:58,532 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 15:25:58,673 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 15:25:58,673 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 15:25:58,863 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 15:25:58,863 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 15:25:59,188 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 15:25:59,529 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 15:25:59,529 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 15:25:59,529 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 15:25:59,529 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 15:25:59,529 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 15:25:59,529 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 15:25:59,529 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 15:25:59,680 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 15:25:59,683 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 15:25:59,686 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 15:25:59,691 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1585994159690 with initial instances count: 2
2020-04-04 15:25:59,693 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 15:25:59,694 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1585994159694, current=UP, previous=STARTING]
2020-04-04 15:25:59,697 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 15:25:59,698 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 15:25:59,700 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 15:25:59,712 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 15:25:59,739 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 15:25:59,812 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 15:25:59,814 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 15:25:59,872 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 15:25:59,912 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 15:25:59,913 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 15:26:00,412 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 8.038 seconds (JVM running for 22.601)
2020-04-04 15:26:00,561 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 15:26:00,561 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 15:26:00,671 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 15:26:00,671 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 15:26:00,683 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 15:26:00,683 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1585994160683, current=DOWN, previous=UP]
2020-04-04 15:26:00,684 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 15:26:00,684 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 15:26:00,696 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 15:26:00,697 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 15:26:00,697 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 15:26:00,700 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 15:26:00,711 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 15:26:03,719 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 15:26:03,734 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 15:26:03,775 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-04 15:26:44,402 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 15:26:44,413 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 15:26:44,414 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 15:26:44,674 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 15:26:44,882 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 15:26:44,896 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@361c294e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7859e786, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@285d851a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@314b8f2d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@664a9613, org.springframework.test.context.event.EventPublishingTestExecutionListener@5118388b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@15a902e7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7876d598, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4a3e3e8b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5af28b27, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@71104a4]
2020-04-04 15:26:47,188 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 15:26:49,334 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 15:26:49,335 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 15:26:49,360 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 15:26:50,763 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 15:26:51,002 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 15:26:51,249 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 15:26:51,880 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:26:51,880 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:26:51,900 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4cc4d454
2020-04-04 15:26:53,482 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 15:26:53,730 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 15:26:53,997 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:26:53,997 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:26:54,434 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 15:26:55,479 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 15:26:55,549 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8859e77dbc4b6606cbef78', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:233}] to localhost:27017
2020-04-04 15:26:55,557 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8859e77dbc4b6606cbef78', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4842500}
2020-04-04 15:26:56,047 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 15:26:56,213 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 15:26:56,231 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 15:26:56,289 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 15:26:56,525 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 15:26:56,530 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 15:26:56,613 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 11.476 seconds (JVM running for 13.952)
2020-04-04 15:26:58,704 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 15:27:00,723 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 15:27:00,724 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 15:27:00,727 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 15:27:01,411 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 15:27:01,427 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 15:27:01,672 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 15:27:01,686 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 15:27:01,687 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 15:27:01,687 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 15:27:01,906 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 15:27:01,906 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1165 ms
2020-04-04 15:27:02,789 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 15:27:02,822 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 15:27:02,829 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 15:27:02,881 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 15:27:02,949 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 15:27:02,955 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8859ee7dbc4b6606cbef79', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:234}] to localhost:27017
2020-04-04 15:27:02,958 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8859ee7dbc4b6606cbef79', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1261300}
2020-04-04 15:27:03,491 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 15:27:03,545 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 15:27:03,592 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 15:27:03,709 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 15:27:03,709 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 15:27:03,907 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 15:27:03,908 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 15:27:04,217 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 15:27:04,573 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 15:27:04,574 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 15:27:04,574 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 15:27:04,574 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 15:27:04,574 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 15:27:04,574 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 15:27:04,574 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 15:27:04,731 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 15:27:04,735 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 15:27:04,739 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 15:27:04,745 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1585994224743 with initial instances count: 2
2020-04-04 15:27:04,747 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 15:27:04,748 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1585994224748, current=UP, previous=STARTING]
2020-04-04 15:27:04,752 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 15:27:04,752 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 15:27:04,754 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 15:27:04,763 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 15:27:04,786 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 15:27:04,840 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 15:27:04,843 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 15:27:04,905 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 15:27:04,942 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 15:27:04,943 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 15:27:05,508 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 8.077 seconds (JVM running for 22.848)
2020-04-04 15:27:05,694 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 15:27:05,695 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 15:27:05,794 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 15:27:05,795 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 15:27:05,807 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 15:27:05,808 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1585994225808, current=DOWN, previous=UP]
2020-04-04 15:27:05,808 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 15:27:05,809 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 15:27:05,819 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 15:27:05,819 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 15:27:05,821 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 15:27:05,824 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 15:27:05,835 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 15:27:08,840 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 15:27:08,851 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 15:27:08,903 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-04 15:27:15,601 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 15:27:15,628 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 15:27:15,629 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 15:27:15,967 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 15:27:16,280 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 15:27:16,313 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@221cdd87, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4d66cb, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c79f2cf, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@63551c66, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2761156e, org.springframework.test.context.event.EventPublishingTestExecutionListener@4cf15477, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7fad28ac, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3450bd13, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1bb51492, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5da1a97f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4b5f022f]
2020-04-04 15:27:19,692 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 15:27:21,927 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 15:27:21,928 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 15:27:21,969 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 15:27:23,757 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 15:27:24,100 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 15:27:24,477 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 15:27:25,297 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:27:25,297 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:27:25,323 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@71aa6cde
2020-04-04 15:27:27,420 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 15:27:27,751 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 15:27:28,033 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 15:27:28,033 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 15:27:28,526 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 15:27:29,783 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 15:27:29,900 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e885a09f2a9770b7332c029', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:235}] to localhost:27017
2020-04-04 15:27:29,910 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e885a09f2a9770b7332c029', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5627900}
2020-04-04 15:27:30,830 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 15:27:30,994 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 15:27:31,023 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 15:27:31,092 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 15:27:31,334 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 15:27:31,340 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 15:27:31,450 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 14.566 seconds (JVM running for 18.502)
2020-04-04 15:27:34,292 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 15:27:36,319 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 15:27:36,319 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 15:27:36,322 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 15:27:37,053 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 15:27:37,072 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 15:27:37,398 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 15:27:37,432 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 15:27:37,433 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 15:27:37,433 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 15:27:37,749 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 15:27:37,749 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1419 ms
2020-04-04 15:27:38,996 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 15:27:39,034 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 15:27:39,041 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 15:27:39,085 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 15:27:39,152 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 15:27:39,162 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e885a13f2a9770b7332c02a', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:236}] to localhost:27017
2020-04-04 15:27:39,165 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e885a13f2a9770b7332c02a', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1935000}
2020-04-04 15:27:39,812 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 15:27:39,875 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 15:27:39,955 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 15:27:40,092 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 15:27:40,092 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 15:27:40,375 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 15:27:40,375 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 15:27:40,786 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 15:27:41,252 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 15:27:41,253 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 15:27:41,253 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 15:27:41,253 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 15:27:41,253 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 15:27:41,254 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 15:27:41,254 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 15:27:41,531 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 15:27:41,534 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 15:27:41,538 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 15:27:41,543 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1585994261541 with initial instances count: 2
2020-04-04 15:27:41,544 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 15:27:41,545 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1585994261545, current=UP, previous=STARTING]
2020-04-04 15:27:41,549 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 15:27:41,549 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 15:27:41,550 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 15:27:41,557 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 15:27:41,599 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 15:27:41,637 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 15:27:41,640 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 15:27:41,685 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 15:27:41,725 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 15:27:41,726 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 15:27:42,599 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 10.161 seconds (JVM running for 29.651)
2020-04-04 15:27:42,832 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 15:27:42,833 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 15:27:42,919 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 15:27:42,919 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 15:27:45,307 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 15:27:45,307 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1585994265307, current=DOWN, previous=UP]
2020-04-04 15:27:45,308 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 15:27:45,309 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 15:27:45,316 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 15:27:45,320 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 15:27:45,321 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 15:27:45,321 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 15:27:45,335 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 15:27:48,343 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 15:27:48,361 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 15:27:48,416 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-04 17:01:49,009 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 17:01:49,033 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 17:01:49,035 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 17:01:49,384 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 17:01:49,689 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 17:01:49,717 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2761156e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4cf15477, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7fad28ac, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3450bd13, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1bb51492, org.springframework.test.context.event.EventPublishingTestExecutionListener@5da1a97f, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4b5f022f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7a569672, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@49f41c2e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@194eae3e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2ab39942]
2020-04-04 17:01:53,170 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 17:01:55,411 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 17:01:55,412 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 17:01:55,458 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 17:01:57,372 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 17:01:57,705 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 17:01:58,044 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 17:01:58,860 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 17:01:58,860 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 17:01:58,892 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@8f337c4
2020-04-04 17:02:00,978 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 17:02:01,255 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 17:02:01,583 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 17:02:01,583 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 17:02:02,128 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 17:02:03,532 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 17:02:03,633 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e887033cda9227dd6858952', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:237}] to localhost:27017
2020-04-04 17:02:03,643 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e887033cda9227dd6858952', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5512500}
2020-04-04 17:02:04,596 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 17:02:04,771 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 17:02:04,800 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 17:02:04,867 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 17:02:05,123 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 17:02:05,130 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 17:02:05,244 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 14.953 seconds (JVM running for 18.374)
2020-04-04 17:02:07,865 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 17:02:09,893 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 17:02:09,893 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 17:02:09,897 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 17:02:10,662 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 17:02:10,684 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 17:02:10,976 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 17:02:10,999 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 17:02:10,999 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 17:02:11,000 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 17:02:11,392 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 17:02:11,392 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1478 ms
2020-04-04 17:02:12,620 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 17:02:12,653 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 17:02:12,662 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 17:02:12,718 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 17:02:12,785 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 17:02:12,794 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e88703ccda9227dd6858953', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:238}] to localhost:27017
2020-04-04 17:02:12,797 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e88703ccda9227dd6858953', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1895400}
2020-04-04 17:02:13,385 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 17:02:13,439 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 17:02:13,502 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 17:02:13,641 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 17:02:13,641 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 17:02:13,880 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 17:02:13,880 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 17:02:14,248 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 17:02:14,657 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 17:02:14,657 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 17:02:14,657 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 17:02:14,657 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 17:02:14,657 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 17:02:14,657 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 17:02:14,658 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 17:02:14,888 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 17:02:14,891 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 17:02:14,895 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 17:02:14,899 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1585999934898 with initial instances count: 2
2020-04-04 17:02:14,901 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 17:02:14,902 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1585999934902, current=UP, previous=STARTING]
2020-04-04 17:02:14,905 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 17:02:14,905 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 17:02:14,906 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 17:02:14,914 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 17:02:14,950 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 17:02:15,000 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 17:02:15,005 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 17:02:15,056 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 17:02:15,114 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 17:02:15,115 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 17:02:15,792 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 9.581 seconds (JVM running for 28.923)
2020-04-04 17:02:15,973 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 17:02:15,974 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 17:02:16,087 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 17:02:16,087 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 17:02:18,915 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 17:02:18,915 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1585999938915, current=DOWN, previous=UP]
2020-04-04 17:02:18,915 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 17:02:18,917 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 17:02:18,922 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 17:02:18,927 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 17:02:18,928 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 17:02:18,929 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 17:02:18,942 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 17:02:21,950 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 17:02:21,966 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 17:02:22,011 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-04 17:07:54,135 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 17:07:54,152 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 17:07:54,153 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 17:07:54,491 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 17:07:54,798 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 17:07:54,823 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5d202dc4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@71e409f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@14c18a6a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6aa792, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5c78f456, org.springframework.test.context.event.EventPublishingTestExecutionListener@29174dfe, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@319d106c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@641e67fa, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7fdff56b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6cb43fd3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@35f35c59]
2020-04-04 17:07:58,041 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 17:08:00,271 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 17:08:00,272 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 17:08:00,311 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 17:08:02,133 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 17:08:02,457 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 17:08:02,833 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 17:08:03,707 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 17:08:03,707 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 17:08:03,735 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@12fcb643
2020-04-04 17:08:05,932 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 17:08:06,228 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 17:08:06,526 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 17:08:06,526 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 17:08:07,028 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 17:08:08,371 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 17:08:08,470 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8871a0326a2c62c45788ee', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:239}] to localhost:27017
2020-04-04 17:08:08,479 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8871a0326a2c62c45788ee', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5311500}
2020-04-04 17:08:09,161 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 17:08:09,330 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 17:08:09,360 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 17:08:09,431 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 17:08:09,677 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 17:08:09,682 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 17:08:09,780 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 14.351 seconds (JVM running for 17.992)
2020-04-04 17:08:12,256 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 17:08:14,280 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 17:08:14,281 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 17:08:14,285 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 17:08:15,036 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 17:08:15,055 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 17:08:15,338 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 17:08:15,359 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 17:08:15,359 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 17:08:15,360 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 17:08:15,801 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 17:08:15,801 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1498 ms
2020-04-04 17:08:17,243 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 17:08:17,283 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 17:08:17,290 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 17:08:17,344 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 17:08:17,410 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 17:08:17,418 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8871a9326a2c62c45788ef', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:240}] to localhost:27017
2020-04-04 17:08:17,421 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8871a9326a2c62c45788ef', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2100200}
2020-04-04 17:08:18,122 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 17:08:18,181 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 17:08:18,244 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 17:08:18,381 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 17:08:18,381 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 17:08:18,633 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 17:08:18,634 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 17:08:18,988 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 17:08:19,370 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 17:08:19,371 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 17:08:19,371 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 17:08:19,371 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 17:08:19,371 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 17:08:19,371 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 17:08:19,371 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 17:08:19,624 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 17:08:19,628 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 17:08:19,634 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 17:08:19,641 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1586000299639 with initial instances count: 2
2020-04-04 17:08:19,643 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 17:08:19,645 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1586000299645, current=UP, previous=STARTING]
2020-04-04 17:08:19,649 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 17:08:19,650 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 17:08:19,652 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 17:08:19,667 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 17:08:19,715 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 17:08:19,812 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 17:08:19,819 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 17:08:19,873 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 17:08:19,916 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 17:08:19,918 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 17:08:20,703 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 9.989 seconds (JVM running for 28.915)
2020-04-04 17:08:20,940 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 17:08:20,940 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 17:08:21,117 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 17:08:21,117 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 17:08:23,814 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 17:08:23,814 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1586000303814, current=DOWN, previous=UP]
2020-04-04 17:08:23,815 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 17:08:23,816 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 17:08:23,828 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 17:08:23,829 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 17:08:23,833 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 17:08:23,839 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 17:08:23,861 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 17:08:26,870 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 17:08:26,886 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 17:08:26,939 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-04 17:09:09,595 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 17:09:09,611 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 17:09:09,613 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 17:09:09,944 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 17:09:10,245 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 17:09:10,274 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@64186f60, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@de40aa1, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@61b76a7d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@57f89680, org.springframework.test.context.support.DirtiesContextTestExecutionListener@70bc9070, org.springframework.test.context.event.EventPublishingTestExecutionListener@5d202dc4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@71e409f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@14c18a6a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6aa792, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5c78f456, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@29174dfe]
2020-04-04 17:09:13,687 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 17:09:15,915 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 17:09:15,916 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 17:09:15,956 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 17:09:17,868 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 17:09:18,234 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 17:09:18,608 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 17:09:19,501 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 17:09:19,502 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 17:09:19,531 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1a161201
2020-04-04 17:09:21,646 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 17:09:21,993 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 17:09:22,352 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 17:09:22,353 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 17:09:22,894 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 17:09:24,368 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 17:09:24,489 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8871ec761f78411ee4529b', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:241}] to localhost:27017
2020-04-04 17:09:24,500 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8871ec761f78411ee4529b', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=6313500}
2020-04-04 17:09:25,477 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 17:09:25,666 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 17:09:25,702 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 17:09:25,767 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 17:09:26,000 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 17:09:26,007 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 17:09:26,094 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 15.205 seconds (JVM running for 18.779)
2020-04-04 17:09:28,988 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 17:09:31,014 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 17:09:31,014 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 17:09:31,053 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 17:09:31,703 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 17:09:31,726 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 17:09:32,022 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 17:09:32,043 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 17:09:32,044 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 17:09:32,045 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 17:09:32,371 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 17:09:32,371 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1301 ms
2020-04-04 17:09:33,760 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 17:09:33,797 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 17:09:33,804 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 17:09:33,864 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 17:09:33,933 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 17:09:33,942 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8871f5761f78411ee4529c', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:242}] to localhost:27017
2020-04-04 17:09:33,946 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8871f5761f78411ee4529c', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2116700}
2020-04-04 17:09:34,737 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 17:09:34,814 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 17:09:34,875 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 17:09:35,017 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 17:09:35,018 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 17:09:35,335 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 17:09:35,335 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 17:09:35,742 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 17:09:36,147 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 17:09:36,148 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 17:09:36,148 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 17:09:36,148 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 17:09:36,148 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 17:09:36,148 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 17:09:36,148 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 17:09:36,426 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 17:09:36,431 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 17:09:36,437 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 17:09:36,444 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1586000376442 with initial instances count: 2
2020-04-04 17:09:36,446 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 17:09:36,448 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1586000376448, current=UP, previous=STARTING]
2020-04-04 17:09:36,454 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 17:09:36,454 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 17:09:36,456 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 17:09:36,471 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 17:09:36,519 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 17:09:36,603 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 17:09:36,609 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 17:09:36,654 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 17:09:36,696 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 17:09:36,696 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 17:09:37,314 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 10.312 seconds (JVM running for 29.998)
2020-04-04 17:09:37,531 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 17:09:37,532 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 17:09:37,692 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 17:09:37,692 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 17:09:37,716 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 17:09:37,717 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1586000377717, current=DOWN, previous=UP]
2020-04-04 17:09:37,718 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 17:09:37,721 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 17:09:37,734 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 17:09:37,735 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 17:09:40,458 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 17:09:40,458 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 17:09:40,470 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 17:09:43,477 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 17:09:43,494 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 17:09:43,548 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-04 17:11:18,303 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 17:11:18,324 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 17:11:18,326 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 17:11:18,707 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 17:11:19,037 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 17:11:19,070 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@14c18a6a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6aa792, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5c78f456, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@29174dfe, org.springframework.test.context.support.DirtiesContextTestExecutionListener@319d106c, org.springframework.test.context.event.EventPublishingTestExecutionListener@641e67fa, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7fdff56b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6cb43fd3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@35f35c59, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2245ccaa, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@22b10124]
2020-04-04 17:11:22,461 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 17:11:24,692 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 17:11:24,693 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 17:11:24,734 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 17:11:26,590 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 17:11:26,947 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 17:11:27,296 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 17:11:28,116 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 17:11:28,117 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 17:11:28,150 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3ae096c1
2020-04-04 17:11:30,247 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 17:11:30,568 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 17:11:30,850 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 17:11:30,850 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 17:11:31,390 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 17:11:32,673 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 17:11:32,789 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e88726c77e23e0ea29ac8fb', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:243}] to localhost:27017
2020-04-04 17:11:32,798 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e88726c77e23e0ea29ac8fb', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5669200}
2020-04-04 17:11:33,739 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 17:11:33,930 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 17:11:33,960 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 17:11:34,025 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 17:11:34,266 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 17:11:34,272 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 17:11:34,367 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 14.649 seconds (JVM running for 18.302)
2020-04-04 17:11:37,127 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 17:11:39,140 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 17:11:39,140 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 17:11:39,143 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 17:11:39,843 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 17:11:39,865 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 17:11:40,214 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 17:11:40,240 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 17:11:40,241 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 17:11:40,241 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 17:11:40,563 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 17:11:40,563 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1408 ms
2020-04-04 17:11:41,946 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 17:11:41,985 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 17:11:41,992 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 17:11:42,055 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 17:11:42,123 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 17:11:42,130 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e88727677e23e0ea29ac8fc', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:244}] to localhost:27017
2020-04-04 17:11:42,134 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e88727677e23e0ea29ac8fc', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2011700}
2020-04-04 17:11:42,722 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 17:11:42,775 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 17:11:42,838 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 17:11:42,985 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 17:11:42,986 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 17:11:43,236 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 17:11:43,236 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 17:11:43,699 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 17:11:44,138 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 17:11:44,138 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 17:11:44,138 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 17:11:44,138 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 17:11:44,138 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 17:11:44,138 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 17:11:44,138 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 17:11:44,446 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 17:11:44,448 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 17:11:44,452 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 17:11:44,457 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1586000504456 with initial instances count: 2
2020-04-04 17:11:44,459 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 17:11:44,461 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1586000504461, current=UP, previous=STARTING]
2020-04-04 17:11:44,463 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 17:11:44,463 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 17:11:44,464 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 17:11:44,472 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 17:11:44,505 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 17:11:44,551 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 17:11:44,555 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 17:11:44,598 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 17:11:44,638 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 17:11:44,640 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 17:11:45,294 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 9.958 seconds (JVM running for 29.229)
2020-04-04 17:11:45,499 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 17:11:45,499 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 17:11:45,626 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 17:11:45,627 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 17:11:48,087 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 17:11:48,088 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1586000508088, current=DOWN, previous=UP]
2020-04-04 17:11:48,088 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 17:11:48,089 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 17:11:48,094 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 17:11:48,101 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 17:11:48,101 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 17:11:48,101 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 17:11:48,114 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 17:11:51,122 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 17:11:51,139 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 17:11:51,195 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-04 17:12:16,859 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 17:12:16,876 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 17:12:16,878 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 17:12:17,252 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 17:12:17,591 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 17:12:17,630 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@14c18a6a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6aa792, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5c78f456, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@29174dfe, org.springframework.test.context.support.DirtiesContextTestExecutionListener@319d106c, org.springframework.test.context.event.EventPublishingTestExecutionListener@641e67fa, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7fdff56b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6cb43fd3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@35f35c59, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2245ccaa, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@22b10124]
2020-04-04 17:12:21,113 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 17:12:23,343 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 17:12:23,344 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 17:12:23,387 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 17:12:25,186 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 17:12:25,530 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 17:12:25,903 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 17:12:26,757 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 17:12:26,757 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 17:12:26,785 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3ae096c1
2020-04-04 17:12:28,957 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 17:12:29,276 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 17:12:29,566 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 17:12:29,566 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 17:12:30,135 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 17:12:31,567 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 17:12:31,679 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8872a7acf3ba132a54fda2', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:245}] to localhost:27017
2020-04-04 17:12:31,689 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8872a7acf3ba132a54fda2', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=6404600}
2020-04-04 17:12:32,573 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 17:12:32,752 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 17:12:32,783 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 17:12:32,850 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 17:12:33,106 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 17:12:33,111 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 17:12:33,206 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 14.883 seconds (JVM running for 18.659)
2020-04-04 17:12:36,004 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 17:12:38,023 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 17:12:38,024 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 17:12:38,028 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 17:12:38,731 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 17:12:38,747 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 17:12:39,037 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 17:12:39,062 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 17:12:39,063 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 17:12:39,063 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 17:12:39,359 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 17:12:39,359 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1317 ms
2020-04-04 17:12:40,513 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 17:12:40,552 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 17:12:40,560 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 17:12:40,622 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 17:12:40,708 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 17:12:40,720 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8872b0acf3ba132a54fda3', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:246}] to localhost:27017
2020-04-04 17:12:40,724 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8872b0acf3ba132a54fda3', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2172800}
2020-04-04 17:12:41,367 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 17:12:41,421 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 17:12:41,476 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 17:12:41,603 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 17:12:41,603 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 17:12:41,816 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 17:12:41,817 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 17:12:42,140 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 17:12:42,679 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 17:12:42,680 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 17:12:42,680 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 17:12:42,680 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 17:12:42,680 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 17:12:42,680 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 17:12:42,680 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 17:12:43,041 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 17:12:43,044 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 17:12:43,047 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 17:12:43,052 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1586000563051 with initial instances count: 2
2020-04-04 17:12:43,054 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 17:12:43,055 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1586000563055, current=UP, previous=STARTING]
2020-04-04 17:12:43,058 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 17:12:43,058 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 17:12:43,059 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 17:12:43,066 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 17:12:43,101 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 17:12:43,146 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 17:12:43,150 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 17:12:43,190 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 17:12:43,234 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 17:12:43,235 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 17:12:44,087 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 9.902 seconds (JVM running for 29.539)
2020-04-04 17:12:44,363 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 17:12:44,364 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 17:12:44,555 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 17:12:44,556 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 17:12:47,170 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 17:12:47,171 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1586000567171, current=DOWN, previous=UP]
2020-04-04 17:12:47,171 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 17:12:47,173 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 17:12:47,178 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 17:12:47,184 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 17:12:47,185 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 17:12:47,185 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 17:12:47,205 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 17:12:50,211 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 17:12:50,225 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 17:12:50,272 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-04 17:13:22,023 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-04 17:13:22,042 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-04 17:13:22,044 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-04 17:13:22,456 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-04 17:13:22,820 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-04 17:13:22,857 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@14c18a6a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6aa792, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5c78f456, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@29174dfe, org.springframework.test.context.support.DirtiesContextTestExecutionListener@319d106c, org.springframework.test.context.event.EventPublishingTestExecutionListener@641e67fa, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7fdff56b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6cb43fd3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@35f35c59, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2245ccaa, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@22b10124]
2020-04-04 17:13:26,489 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 17:13:28,705 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 17:13:28,706 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 17:13:28,746 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-04 17:13:30,651 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-04 17:13:30,988 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=f79187a7-18a8-36c7-b375-6f21dbf9baf5
2020-04-04 17:13:31,360 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 17:13:32,192 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 17:13:32,192 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 17:13:32,221 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3ae096c1
2020-04-04 17:13:34,366 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 17:13:34,667 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 17:13:34,950 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-04 17:13:34,951 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-04 17:13:35,504 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 17:13:36,905 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 17:13:37,036 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8872e8d91e731850f8ed90', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:247}] to localhost:27017
2020-04-04 17:13:37,048 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8872e8d91e731850f8ed90', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=7731500}
2020-04-04 17:13:37,977 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 17:13:38,132 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 17:13:38,163 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 17:13:38,240 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 17:13:38,511 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 17:13:38,515 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 17:13:38,598 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 14.983 seconds (JVM running for 19.075)
2020-04-04 17:13:41,124 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-04 17:13:43,146 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-04 17:13:43,146 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rules-engine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-04 17:13:43,150 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-04 17:13:43,906 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4f6d7448-2935-38db-ae7a-ae0747df0e66
2020-04-04 17:13:43,926 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 17:13:44,245 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-04 17:13:44,267 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-04 17:13:44,267 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-04 17:13:44,268 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-04 17:13:44,529 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-04 17:13:44,530 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1363 ms
2020-04-04 17:13:45,799 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-04 17:13:45,840 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 17:13:45,848 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-04 17:13:45,908 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 17:13:45,974 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-04 17:13:45,982 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8872f1d91e731850f8ed91', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:248}] to localhost:27017
2020-04-04 17:13:45,986 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8872f1d91e731850f8ed91', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1945900}
2020-04-04 17:13:46,653 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-04 17:13:46,737 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-04 17:13:46,826 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-04 17:13:46,964 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-04 17:13:46,964 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-04 17:13:47,233 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-04 17:13:47,233 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-04 17:13:47,613 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-04 17:13:48,046 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-04 17:13:48,047 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-04 17:13:48,047 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-04 17:13:48,047 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-04 17:13:48,047 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-04 17:13:48,047 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-04 17:13:48,047 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-04 17:13:48,282 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-04 17:13:48,286 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-04 17:13:48,290 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-04 17:13:48,296 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1586000628295 with initial instances count: 2
2020-04-04 17:13:48,298 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULES-ENGINE with eureka with status UP
2020-04-04 17:13:48,300 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1586000628300, current=UP, previous=STARTING]
2020-04-04 17:13:48,304 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 17:13:48,304 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-04 17:13:48,305 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-04 17:13:48,317 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-04 17:13:48,359 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 17:13:48,419 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-04 17:13:48,423 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-04 17:13:48,480 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-04 17:13:48,526 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-04 17:13:48,527 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-04 17:13:49,116 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 9.607 seconds (JVM running for 29.593)
2020-04-04 17:13:49,271 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 17:13:49,271 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 17:13:49,388 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-04 17:13:49,389 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-04 17:13:50,413 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 17:13:50,413 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1586000630413, current=DOWN, previous=UP]
2020-04-04 17:13:50,414 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776: registering service...
2020-04-04 17:13:50,415 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-04 17:13:50,422 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULES-ENGINE with eureka with status DOWN
2020-04-04 17:13:50,425 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - registration status: 204
2020-04-04 17:13:50,428 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 17:13:50,428 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-04 17:13:50,442 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-04 17:13:53,450 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-04 17:13:53,467 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULES-ENGINE/WKWIN2657595.global.publicisgroupe.net:rules-engine:8776 - deregister  status: 200
2020-04-04 17:13:53,523 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
